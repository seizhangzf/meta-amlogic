From e29b13b661ce0fa05c9141d779c855195272d9a7 Mon Sep 17 00:00:00 2001
From: "yufei.qian" <yufei.qian@amlogic.com>
Date: Fri, 25 Jun 2021 14:51:06 +0800
Subject: [PATCH 6/6] amvecm: modify default sr parameters [1/1]

PD#SWPL-53369

Problem:
default sr parameters issue

Solution:
modify default sr parameters

Verify:
verify on SC2

Change-Id: I8812d3ca2bec37cf49228942226f4ae8e1ece8f4
Signed-off-by: yufei.qian <yufei.qian@amlogic.com>
---
 .../enhancement/amvecm/reg_default_setting.h  | 38 ++++++++++---------
 .../media/enhancement/amvecm/reg_helper.h     |  2 +-
 2 files changed, 21 insertions(+), 19 deletions(-)

diff --git a/drivers/amlogic/media/enhancement/amvecm/reg_default_setting.h b/drivers/amlogic/media/enhancement/amvecm/reg_default_setting.h
index d4b7e6d300d6..8b11a56dc4f6 100644
--- a/drivers/amlogic/media/enhancement/amvecm/reg_default_setting.h
+++ b/drivers/amlogic/media/enhancement/amvecm/reg_default_setting.h
@@ -118,7 +118,7 @@ static struct am_regs_s cm_default = {
 
 /*sr0 sharpness reg*/
 struct am_regs_s sr0_default = {
-	0,
+	95,
 	{
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SHARP_HVSIZE, 0xffffffff, 0x02d00240},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SHARP_HVBLANK_NUM, 0xffffffff, 0x00001e58},
@@ -180,31 +180,31 @@ struct am_regs_s sr0_default = {
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_PK_OS_ADPT_MISC,
 		0xffffffff, 0x2806c814},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_PK_OS_STATIC, 0xffffffff, 0x2203f03f},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_PK_NR_ENABLE, 0xffffffff, 0x00000002},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_PK_NR_ENABLE, 0xffffffff, 0x00000000},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_PK_DRT_SAD_MISC, 0xffffffff, 0x12120018},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_NR_TI_DNLP_BLEND, 0xffffffff, 0x00000407},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_TI_DIR_CORE_ALPHA, 0xffffffff, 0x0a00003f},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_CTI_DIR_ALPHA, 0xffffffff, 0x0400003f},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_LTI_CTI_DF_GAIN, 0xffffffff, 0x0c0c0c0c},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_LTI_CTI_DIR_AC_DBG, 0xffffffff, 0x56ee0000},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HCTI_FLT_CLP_DC, 0xffffffff, 0x15555300},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HCTI_FLT_CLP_DC, 0xffffffff, 0x05555300},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HCTI_BST_GAIN, 0xffffffff, 0x050a0a00},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HCTI_BST_CORE, 0xffffffff, 0x03030303},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HCTI_CON_2_GAIN_0, 0xffffffff, 0x24193c05},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HCTI_CON_2_GAIN_1, 0xffffffff, 0x4b055014},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HCTI_OS_MARGIN, 0xffffffff, 0x00000000},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HLTI_FLT_CLP_DC, 0xffffffff, 0x10152100},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HLTI_FLT_CLP_DC, 0xffffffff, 0x00152100},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HLTI_BST_GAIN, 0xffffffff, 0x06060600},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HLTI_BST_CORE, 0xffffffff, 0x03030303},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HLTI_CON_2_GAIN_0, 0xffffffff, 0x24193c05},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HLTI_CON_2_GAIN_1, 0xffffffff, 0x66635e24},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_HLTI_OS_MARGIN, 0xffffffff, 0x00000000},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VLTI_FLT_CON_CLP, 0xffffffff, 0x00006a94},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VLTI_FLT_CON_CLP, 0xffffffff, 0x00002a94},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VLTI_BST_GAIN, 0xffffffff, 0x00202020},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VLTI_BST_CORE, 0xffffffff, 0x00050503},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VLTI_CON_2_GAIN_0, 0xffffffff, 0x193c0560},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VLTI_CON_2_GAIN_1, 0xffffffff, 0x5f501400},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VCTI_FLT_CON_CLP, 0xffffffff, 0x00006a94},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VCTI_FLT_CON_CLP, 0xffffffff, 0x00002a94},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VCTI_BST_GAIN, 0xffffffff, 0x00101010},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VCTI_BST_CORE, 0xffffffff, 0x00050503},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_VCTI_CON_2_GAIN_0, 0xffffffff, 0x193c0560},
@@ -213,7 +213,7 @@ struct am_regs_s sr0_default = {
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_SAD_CTRL, 0xffffffff, 0x060606ff},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_PK_CTRL0, 0xffffffff, 0x00000ffc},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_PK_CTRL1, 0xffffffff, 0x112020cc},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DRTLPF_EN, 0xffffffff, 0x00000037},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DRTLPF_EN, 0xffffffff, 0x00000000},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DRTLPF_ALPHA_0,
 		0xffffffff, 0x0405050c},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DRTLPF_ALPHA_1,
@@ -223,7 +223,7 @@ struct am_regs_s sr0_default = {
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DRTLPF_ALPHA_OFST,
 		0xffffffff, 0x000e000e},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DERING_CTRL, //80
-		0xffffffff, 0x1392281c},
+		0xffffffff, 0x0392281c},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DERING_LUMA2PKGAIN_0TO3,
 		0xffffffff, 0xffffc81e},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DERING_LUMA2PKGAIN_4TO6,
@@ -240,7 +240,7 @@ struct am_regs_s sr0_default = {
 		0xffffffff, 0x000a2010},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_SR3_DRTLPF_THETA,
 		0xffffffff, 0xfec96420},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_DB_FLT_CTRL, 0xffffffff, 0x06e222fa},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_DB_FLT_CTRL, 0xffffffff, 0x000222ca},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_DB_FLT_YC_THRD,
 		0xffffffff, 0x97659765},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_DB_FLT_RANDLUT,
@@ -254,13 +254,14 @@ struct am_regs_s sr0_default = {
 		0xffffffff, 0x56667ac8},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_PKGAIN_VSLUMA_LUT_H,
 		0xffffffff, 0x00000004},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP0_DEJ_CTRL, 0xffffffff, 0x00000000},
 	{0}
 	}
 };
 
 /*sr1 sharpness reg*/
 struct am_regs_s sr1_default = {
-	0,
+	95,
 	{
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SHARP_HVSIZE, 0xffffffff, 0x02d00240},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SHARP_HVBLANK_NUM, 0xffffffff, 0x00001e58},
@@ -322,31 +323,31 @@ struct am_regs_s sr1_default = {
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_PK_OS_ADPT_MISC,
 		0xffffffff, 0x2806c814},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_PK_OS_STATIC, 0xffffffff, 0x2203f03f},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_PK_NR_ENABLE, 0xffffffff, 0x00000002},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_PK_NR_ENABLE, 0xffffffff, 0x00000000},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_PK_DRT_SAD_MISC, 0xffffffff, 0x12120018},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_NR_TI_DNLP_BLEND, 0xffffffff, 0x00000407},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_TI_DIR_CORE_ALPHA, 0xffffffff, 0x0a00003f},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_CTI_DIR_ALPHA, 0xffffffff, 0x0400003f},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_LTI_CTI_DF_GAIN, 0xffffffff, 0x0c0c0c0c},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_LTI_CTI_DIR_AC_DBG, 0xffffffff, 0x56ee0000},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HCTI_FLT_CLP_DC, 0xffffffff, 0x15555300},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HCTI_FLT_CLP_DC, 0xffffffff, 0x05555300},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HCTI_BST_GAIN, 0xffffffff, 0x050a0a00},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HCTI_BST_CORE, 0xffffffff, 0x03030303},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HCTI_CON_2_GAIN_0, 0xffffffff, 0x24193c05},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HCTI_CON_2_GAIN_1, 0xffffffff, 0x4b055014},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HCTI_OS_MARGIN, 0xffffffff, 0x00000000},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HLTI_FLT_CLP_DC, 0xffffffff, 0x10152100},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HLTI_FLT_CLP_DC, 0xffffffff, 0x00152100},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HLTI_BST_GAIN, 0xffffffff, 0x06060600},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HLTI_BST_CORE, 0xffffffff, 0x03030303},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HLTI_CON_2_GAIN_0, 0xffffffff, 0x24193c05},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HLTI_CON_2_GAIN_1, 0xffffffff, 0x66635e24},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_HLTI_OS_MARGIN, 0xffffffff, 0x00000000},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VLTI_FLT_CON_CLP, 0xffffffff, 0x00006a94},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VLTI_FLT_CON_CLP, 0xffffffff, 0x00002a94},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VLTI_BST_GAIN, 0xffffffff, 0x00202020},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VLTI_BST_CORE, 0xffffffff, 0x00050503},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VLTI_CON_2_GAIN_0, 0xffffffff, 0x193c0560},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VLTI_CON_2_GAIN_1, 0xffffffff, 0x5f501400},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VCTI_FLT_CON_CLP, 0xffffffff, 0x00006a94},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VCTI_FLT_CON_CLP, 0xffffffff, 0x00002a94},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VCTI_BST_GAIN, 0xffffffff, 0x00101010},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VCTI_BST_CORE, 0xffffffff, 0x00050503},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_VCTI_CON_2_GAIN_0, 0xffffffff, 0x193c0560},
@@ -355,7 +356,7 @@ struct am_regs_s sr1_default = {
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_SAD_CTRL, 0xffffffff, 0x060606ff},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_PK_CTRL0, 0xffffffff, 0x00000ffc},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_PK_CTRL1, 0xffffffff, 0x112020cc},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DRTLPF_EN, 0xffffffff, 0x00000037},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DRTLPF_EN, 0xffffffff, 0x0000000},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DRTLPF_ALPHA_0,
 		0xffffffff, 0x0405050c},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DRTLPF_ALPHA_1,
@@ -365,7 +366,7 @@ struct am_regs_s sr1_default = {
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DRTLPF_ALPHA_OFST,
 		0xffffffff, 0x000e000e},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DERING_CTRL,
-		0xffffffff, 0x1392281c},
+		0xffffffff, 0x0392281c},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DERING_LUMA2PKGAIN_0TO3,
 		0xffffffff, 0xffffc81e},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DERING_LUMA2PKGAIN_4TO6,
@@ -382,7 +383,7 @@ struct am_regs_s sr1_default = {
 		0xffffffff, 0x000a2010},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_SR3_DRTLPF_THETA,
 		0xffffffff, 0xfec96420},
-	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_DB_FLT_CTRL, 0xffffffff, 0x06e222fa},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_DB_FLT_CTRL, 0xffffffff, 0x000222ca},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_DB_FLT_YC_THRD,
 		0xffffffff, 0x97659765},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_DB_FLT_RANDLUT,
@@ -396,6 +397,7 @@ struct am_regs_s sr1_default = {
 		0xffffffff, 0x56667ac8},
 	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_PKGAIN_VSLUMA_LUT_H,
 		0xffffffff, 0x00000004},
+	{REG_TYPE_OFFSET_VCBUS, SRSHARP1_DEJ_CTRL, 0xffffffff, 0x00000000},
 	{0}
 	}
 };
diff --git a/drivers/amlogic/media/enhancement/amvecm/reg_helper.h b/drivers/amlogic/media/enhancement/amvecm/reg_helper.h
index e3d64a1f86bc..62acdf06a32b 100644
--- a/drivers/amlogic/media/enhancement/amvecm/reg_helper.h
+++ b/drivers/amlogic/media/enhancement/amvecm/reg_helper.h
@@ -97,7 +97,7 @@ static inline u32 get_sr1_offset(void)
 	/*sr1 register shfit*/
 	if (cpu_after_eq_t7())
 		return 0x1300;
-	if (cpu_after_eq_tm2b())
+	else if (cpu_after_eq_tm2b())
 		return 0x1300;
 	else if (cpu_after_eq_tl1())
 		return 0x0;
-- 
2.29.2

