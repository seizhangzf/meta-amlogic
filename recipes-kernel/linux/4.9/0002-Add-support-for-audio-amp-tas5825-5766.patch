From 39e2ebc0e12828e607ad6c0f139c1de27397ba91 Mon Sep 17 00:00:00 2001
From: Pradeep Sriram <pradeep.sriram@amlogic.com>
Date: Mon, 14 Oct 2019 14:54:22 -0700
Subject: [PATCH 2/2] Add support for audio amp tas5825,5766

---
 .../devicetree/bindings/sound/tas5766.txt          |   18 +
 sound/soc/codecs/amlogic/Kconfig                   |   22 +
 sound/soc/codecs/amlogic/Makefile                  |    8 +-
 sound/soc/codecs/amlogic/tas5766.c                 | 5389 ++++++++++++++++++++
 sound/soc/codecs/amlogic/tas5766.h                 |   60 +
 sound/soc/codecs/amlogic/tas5825.c                 | 1001 ++++
 6 files changed, 6496 insertions(+), 2 deletions(-)
 create mode 100644 Documentation/devicetree/bindings/sound/tas5766.txt
 create mode 100644 sound/soc/codecs/amlogic/tas5766.c
 create mode 100644 sound/soc/codecs/amlogic/tas5766.h
 create mode 100644 sound/soc/codecs/amlogic/tas5825.c

diff --git a/Documentation/devicetree/bindings/sound/tas5766.txt b/Documentation/devicetree/bindings/sound/tas5766.txt
new file mode 100644
index 00000000..e7a8043
--- /dev/null
+++ b/Documentation/devicetree/bindings/sound/tas5766.txt
@@ -0,0 +1,18 @@
+Texas Instruments TAS5766 Audio amplifier
+
+The TAS5766 serial control bus communicates through the I2C protocol only. The
+serial bus is also used for periodic codec fault checking/reporting during
+audio playback. For more product information please see the links below:
+
+Required properties:
+
+- compatible : "ti, tas5766"
+- reg : I2C slave address
+
+Example:
+
+tas5766: tas5766@7c {
+        status = "okay";
+        compatible = "ti,tas5766";
+        reg = <0x2d>;
+};
diff --git a/sound/soc/codecs/amlogic/Kconfig b/sound/soc/codecs/amlogic/Kconfig
index f0573fc..ed1ae7a 100644
--- a/sound/soc/codecs/amlogic/Kconfig
+++ b/sound/soc/codecs/amlogic/Kconfig
@@ -124,6 +124,28 @@ config AMLOGIC_SND_SOC_TAS5707
                 Enable support for Texas Instruments TAS5707 CODEC.
                 Select this if your TAS5707 is connected via an I2C bus.
 
+config AMLOGIC_SND_SOC_TAS5766
+	bool "Texas Instruments TAS5766 amplifier"
+	depends on AMLOGIC_SND_SOC_CODECS
+	depends on I2C
+	default n
+	help
+		Enable support for Texas Instruments TAS5766 CODEC.
+		Select this if your TAS5766 is connected via an I2C bus.
+                Enable support for Texas Instruments TAS5766 CODEC.
+                Select this if your TAS5766 is connected via an I2C bus.
+
+config AMLOGIC_SND_SOC_TAS5825
+	bool "Texas Instruments TAS5825 amplifier"
+	depends on AMLOGIC_SND_SOC_CODECS
+	depends on I2C
+	default n
+	help
+		Enable support for Texas Instruments TAS5825 CODEC.
+		Select this if your TAS5825 is connected via an I2C bus.
+                Enable support for Texas Instruments TAS5825 CODEC.
+                Select this if your TAS5825 is connected via an I2C bus.
+
 config AMLOGIC_SND_SOC_TLV320ADC3101
 	bool "Texas Instruments TLV320ADC3101"
 	depends on AMLOGIC_SND_SOC_CODECS
diff --git a/sound/soc/codecs/amlogic/Makefile b/sound/soc/codecs/amlogic/Makefile
index 348a6347..ee0118d 100644
--- a/sound/soc/codecs/amlogic/Makefile
+++ b/sound/soc/codecs/amlogic/Makefile
@@ -14,12 +14,14 @@ snd-soc-aml_codec_tl1_acodec-objs  := aml_codec_tl1_acodec.o
 #Third part codecs
 snd-soc-tas5782m-objs := tas5782m.o
 snd-soc-tas5707-objs := tas5707.o
+snd-soc-tas5766-objs := tas5766.o
+snd-soc-tas5825-objs := tas5825.o
 snd-soc-tlv320adc3101-objs := tlv320adc3101.o
 snd-soc-pcm186x-objs := pcm186x.o pcm186x-i2c.o pcm186x-spi.o
 snd-soc-ssm3515-objs := ssm3515.o
 snd-soc-ssm3525-objs := ssm3525.o
 snd-soc-ad82584f-objs := ad82584f.o
-snd-soc-tas5805-objs := tas5805.o
+#snd-soc-tas5805-objs := tas5805.o
 
 # Amlogic
 obj-$(CONFIG_AMLOGIC_SND_CODEC_DUMMY_CODEC) += snd-soc-dummy_codec.o
@@ -34,6 +36,8 @@ obj-$(CONFIG_AMLOGIC_SND_CODEC_TL1_ACODEC)  += snd-soc-aml_codec_tl1_acodec.o
 #Third part codecs
 obj-$(CONFIG_AMLOGIC_SND_SOC_TAS5782M) += snd-soc-tas5782m.o
 obj-$(CONFIG_AMLOGIC_SND_SOC_TAS5707) += snd-soc-tas5707.o
+obj-$(CONFIG_AMLOGIC_SND_SOC_TAS5766) += snd-soc-tas5766.o
+obj-$(CONFIG_AMLOGIC_SND_SOC_TAS5825) += snd-soc-tas5825.o
 obj-$(CONFIG_AMLOGIC_SND_SOC_TLV320ADC3101) += snd-soc-tlv320adc3101.o
 obj-$(CONFIG_AMLOGIC_SND_SOC_PCM186X) += snd-soc-pcm186x.o
 obj-$(CONFIG_AMLOGIC_SND_SOC_SSM3515) += snd-soc-ssm3515.o
@@ -42,4 +46,4 @@ obj-$(CONFIG_AMLOGIC_SND_SOC_TAS575X) += tas575x.o
 obj-$(CONFIG_AMLOGIC_SND_SOC_ES7243) += es7243.o
 obj-$(CONFIG_AMLOGIC_SND_SOC_AD82584F) += ad82584f.o
 obj-$(CONFIG_AMLOGIC_SND_SOC_CS42528) += cs42528.o
-obj-$(CONFIG_AMLOGIC_SND_SOC_TAS5805) += snd-soc-tas5805.o
+#obj-$(CONFIG_AMLOGIC_SND_SOC_TAS5805) += snd-soc-tas5805.o
diff --git a/sound/soc/codecs/amlogic/tas5766.c b/sound/soc/codecs/amlogic/tas5766.c
new file mode 100644
index 00000000..023e282
--- /dev/null
+++ b/sound/soc/codecs/amlogic/tas5766.c
@@ -0,0 +1,5389 @@
+
+#include <linux/module.h>
+#include <linux/moduleparam.h>
+#include <linux/init.h>
+#include <linux/delay.h>
+#include <linux/i2c.h>
+#include <linux/slab.h>
+#include <sound/core.h>
+#include <sound/pcm.h>
+#include <sound/pcm_params.h>
+#include <sound/soc.h>
+#include <sound/tlv.h>
+#include <sound/tas57xx.h>
+#include "tas5766.h"
+#include <linux/amlogic/aml_gpio_consumer.h>
+
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+#include <linux/earlysuspend.h>
+static void tas5766_early_suspend(struct early_suspend *h);
+static void tas5766_late_resume(struct early_suspend *h);
+#endif
+
+const struct regmap_config tas5766_regmap = {
+	.reg_bits = 8,
+	.val_bits = 8,
+	.cache_type = REGCACHE_RBTREE,
+};
+
+static struct snd_soc_codec *g_tas5766_codec[3];
+
+#define tas5766_RATES (SNDRV_PCM_RATE_8000 | \
+		       SNDRV_PCM_RATE_11025 | \
+		       SNDRV_PCM_RATE_16000 | \
+		       SNDRV_PCM_RATE_22050 | \
+		       SNDRV_PCM_RATE_32000 | \
+		       SNDRV_PCM_RATE_44100 | \
+		       SNDRV_PCM_RATE_48000)
+
+#define tas5766_FORMATS \
+	(SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S16_BE | \
+	 SNDRV_PCM_FMTBIT_S20_3LE | SNDRV_PCM_FMTBIT_S20_3BE | \
+	 SNDRV_PCM_FMTBIT_S24_LE | SNDRV_PCM_FMTBIT_S24_BE | \
+	 SNDRV_PCM_FMTBIT_S32_LE)
+
+static const unsigned char tas5766_reg_init[][2] = {
+	/*Select Page 0*/
+	{ 0x00, 0x00 },
+	/*Set the device into Powerdown*/
+	{ 0x02, 0x11 },
+	/* Reset Device*/
+	{ 0x01, 0x11 },
+	/*Select Page 0*/
+	{ 0x00, 0x00 },
+	/*Set the device into Standby*/
+	{ 0x02, 0x10 },
+	/* -----------------------------------------------*/
+	/* Begin Coefficient Memory (C-RAM_D), Buffer A Dump*/
+	/*--------------------------------------------------*/
+	/*Page 44 (0x2C) Dump*/
+	{ 0x00, 0x2c },
+	{ 0x08, 0x40 },
+	{ 0x09, 0x26 },
+	{ 0x0a, 0xe7 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0xff },
+	{ 0x0d, 0xff },
+	{ 0x0e, 0xff },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x80 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x40 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x7f },
+	{ 0x19, 0xff },
+	{ 0x1a, 0xff },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x20 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x08 },
+	{ 0x25, 0x04 },
+	{ 0x26, 0xdd },
+	{ 0x27, 0x00 },
+	{ 0x28, 0xc0 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x80 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x0b },
+	{ 0x31, 0xc0 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x29 },
+	{ 0x35, 0x80 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x06 },
+	{ 0x3a, 0xd3 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x7f },
+	{ 0x3d, 0xf9 },
+	{ 0x3e, 0x2d },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0xe0 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x32 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x10 },
+	{ 0x51, 0x3a },
+	{ 0x52, 0x76 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x44 },
+	{ 0x5e, 0x32 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7f },
+	{ 0x61, 0xbb },
+	{ 0x62, 0xce },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x06 },
+	{ 0x66, 0xd3 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x7f },
+	{ 0x69, 0xf9 },
+	{ 0x6a, 0x2d },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0xde },
+	{ 0x6d, 0x40 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0xea },
+	{ 0x71, 0xe1 },
+	{ 0x72, 0x47 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x29 },
+	{ 0x75, 0x40 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x0b },
+	{ 0x79, 0xc1 },
+	{ 0x7a, 0x16 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0xc0 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/* Page 45 (0x2D) Dump*/
+	{ 0x00, 0x2d },
+	{ 0x08, 0xc2 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x35 },
+	{ 0x0d, 0x20 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x13 },
+	{ 0x11, 0x5a },
+	{ 0x12, 0x76 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0xd7 },
+	{ 0x15, 0x41 },
+	{ 0x16, 0xa0 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0xff },
+	{ 0x19, 0xf0 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x88 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x18 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x30 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0xd0 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x03 },
+	{ 0x3a, 0x84 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0xb2 },
+	{ 0x3e, 0x55 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x0e },
+	{ 0x41, 0x5b },
+	{ 0x42, 0xde },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x7f },
+	{ 0x45, 0xff },
+	{ 0x46, 0xff },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x02 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x20 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x51 },
+	{ 0x56, 0x26 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x40 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x0c },
+	{ 0x5e, 0xdc },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x02 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x02 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x20 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x40 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0xe0 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0xc0 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x7f },
+	{ 0x7e, 0xf7 },
+	{ 0x7f, 0x00 },
+	/* Page 46 (0x2E) Dump*/
+	{ 0x00, 0x2e },
+	{ 0x08, 0x20 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x08 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0xe0 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0xf8 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x40 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0xc0 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x80 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x50 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x14 },
+	{ 0x2d, 0x40 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x1c },
+	{ 0x31, 0xc0 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x23 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x21 },
+	{ 0x39, 0x80 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0xcd },
+	{ 0x3e, 0x7b },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x7f },
+	{ 0x41, 0x32 },
+	{ 0x42, 0x85 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x01 },
+	{ 0x45, 0xce },
+	{ 0x46, 0xdc },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x89 },
+	{ 0x4a, 0x21 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x7f },
+	{ 0x4d, 0x76 },
+	{ 0x4e, 0xdf },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x2d },
+	{ 0x52, 0xc6 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x7f },
+	{ 0x55, 0xd2 },
+	{ 0x56, 0x3a },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x05 },
+	{ 0x59, 0x3e },
+	{ 0x5a, 0x9c },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x08 },
+	{ 0x5d, 0x39 },
+	{ 0x5e, 0xd3 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7f },
+	{ 0x61, 0xff },
+	{ 0x62, 0xff },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x84 },
+	{ 0x65, 0x4a },
+	{ 0x66, 0x5c },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x77 },
+	{ 0x69, 0xb2 },
+	{ 0x6a, 0x92 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x7f },
+	{ 0x6d, 0x42 },
+	{ 0x6e, 0x58 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x81 },
+	{ 0x71, 0x6c },
+	{ 0x72, 0x20 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x7f },
+	{ 0x75, 0xa4 },
+	{ 0x76, 0x68 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x81 },
+	{ 0x79, 0xf2 },
+	{ 0x7a, 0xf2 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x7c },
+	{ 0x7d, 0x7f },
+	{ 0x7e, 0xbc },
+	{ 0x7f, 0x00 },
+	/*Page 47 (0x2F) Dump*/
+	{ 0x00, 0x2f },
+	{ 0x08, 0x7e },
+	{ 0x09, 0x0b },
+	{ 0x0a, 0xcd },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x83 },
+	{ 0x0d, 0xd9 },
+	{ 0x0e, 0x5b },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0xc0 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x3f },
+	{ 0x16, 0xfe },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x7f },
+	{ 0x19, 0xff },
+	{ 0x1a, 0xff },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0xe0 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x7f },
+	{ 0x22, 0xff },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x08 },
+	{ 0x25, 0xee },
+	{ 0x26, 0x3e },
+	{ 0x27, 0x00 },
+	{ 0x28, 0xf8 },
+	{ 0x29, 0x13 },
+	{ 0x2a, 0x4a },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x07 },
+	{ 0x2d, 0x1f },
+	{ 0x2e, 0x98 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x7e },
+	{ 0x31, 0x56 },
+	{ 0x32, 0x66 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x83 },
+	{ 0x35, 0x0a },
+	{ 0x36, 0x68 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x77 },
+	{ 0x39, 0x4d },
+	{ 0x3a, 0x0f },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x88 },
+	{ 0x3d, 0xff },
+	{ 0x3e, 0xae },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x76 },
+	{ 0x41, 0xc1 },
+	{ 0x42, 0xaf },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x7f },
+	{ 0x45, 0x94 },
+	{ 0x46, 0x03 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x80 },
+	{ 0x49, 0xcd },
+	{ 0x4a, 0xd4 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x0c },
+	{ 0x4d, 0x1c },
+	{ 0x4e, 0xf9 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x7f },
+	{ 0x51, 0xff },
+	{ 0x52, 0xff },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x81 },
+	{ 0x55, 0xa9 },
+	{ 0x56, 0x9b },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x7c },
+	{ 0x59, 0xf5 },
+	{ 0x5a, 0x97 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x71 },
+	{ 0x5d, 0x94 },
+	{ 0x5e, 0xe0 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x99 },
+	{ 0x61, 0xe7 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x7f },
+	{ 0x65, 0xff },
+	{ 0x66, 0xff },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x80 },
+	{ 0x69, 0x6b },
+	{ 0x6a, 0xfe },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x7f },
+	{ 0x6d, 0x32 },
+	{ 0x6e, 0x2c },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x7f },
+	{ 0x71, 0xad },
+	{ 0x72, 0xab },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x80 },
+	{ 0x75, 0x95 },
+	{ 0x76, 0x89 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x44 },
+	{ 0x7a, 0xef },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x44 },
+	{ 0x7e, 0xef },
+	{ 0x7f, 0x00 },
+	/*Page 48 (0x30) Dump*/
+	{ 0x00, 0x30 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x44 },
+	{ 0x0a, 0xef },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x77 },
+	{ 0x0d, 0x6e },
+	{ 0x0e, 0xb8 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x90 },
+	{ 0x11, 0x0e },
+	{ 0x12, 0xd4 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x44 },
+	{ 0x16, 0xef },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x44 },
+	{ 0x1a, 0xef },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x44 },
+	{ 0x1e, 0xef },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x77 },
+	{ 0x21, 0x6e },
+	{ 0x22, 0xb8 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x90 },
+	{ 0x25, 0x0e },
+	{ 0x26, 0xd4 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x1e },
+	{ 0x29, 0xc1 },
+	{ 0x2a, 0x6b },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x77 },
+	{ 0x2d, 0xb3 },
+	{ 0x2e, 0xa7 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x88 },
+	{ 0x31, 0x4c },
+	{ 0x32, 0x59 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x77 },
+	{ 0x35, 0xb3 },
+	{ 0x36, 0xa7 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x77 },
+	{ 0x39, 0x6e },
+	{ 0x3a, 0xb8 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x90 },
+	{ 0x3d, 0x0e },
+	{ 0x3e, 0xd4 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x77 },
+	{ 0x41, 0xb3 },
+	{ 0x42, 0xa7 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x88 },
+	{ 0x45, 0x4c },
+	{ 0x46, 0x59 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x77 },
+	{ 0x49, 0xb3 },
+	{ 0x4a, 0xa7 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x77 },
+	{ 0x4d, 0x6e },
+	{ 0x4e, 0xb8 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x90 },
+	{ 0x51, 0x0e },
+	{ 0x52, 0xd4 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x20 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x7d },
+	{ 0x59, 0x5e },
+	{ 0x5a, 0xe4 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x82 },
+	{ 0x5d, 0xa1 },
+	{ 0x5e, 0x1c },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7d },
+	{ 0x61, 0x5e },
+	{ 0x62, 0xe4 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x7d },
+	{ 0x65, 0x5b },
+	{ 0x66, 0x27 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x85 },
+	{ 0x69, 0x3a },
+	{ 0x6a, 0xbc },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x7f },
+	{ 0x6d, 0xff },
+	{ 0x6e, 0xff },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/* Page 49 (0x31) Dump*/
+	{ 0x00, 0x31 },
+	{ 0x08, 0x7d },
+	{ 0x09, 0x56 },
+	{ 0x0a, 0x65 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x84 },
+	{ 0x0d, 0x4a },
+	{ 0x0e, 0x5b },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x7a },
+	{ 0x11, 0x5c },
+	{ 0x12, 0x2e },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x7b },
+	{ 0x15, 0xb5 },
+	{ 0x16, 0xa5 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x88 },
+	{ 0x19, 0x4d },
+	{ 0x1a, 0x6d },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x7e },
+	{ 0x1d, 0xd2 },
+	{ 0x1e, 0x80 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x81 },
+	{ 0x21, 0x98 },
+	{ 0x22, 0x7f },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x7e },
+	{ 0x25, 0x06 },
+	{ 0x26, 0x92 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x7e },
+	{ 0x29, 0x67 },
+	{ 0x2a, 0x81 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x83 },
+	{ 0x2d, 0x26 },
+	{ 0x2e, 0xee },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x20 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0xff },
+	{ 0x45, 0x80 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x7f },
+	{ 0x49, 0x9e },
+	{ 0x4a, 0x8c },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x9e },
+	{ 0x4d, 0xdf },
+	{ 0x4e, 0x06 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x49 },
+	{ 0x51, 0xec },
+	{ 0x52, 0xe2 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x61 },
+	{ 0x55, 0x9a },
+	{ 0x56, 0x28 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0xb5 },
+	{ 0x59, 0x8f },
+	{ 0x5a, 0x29 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x7f },
+	{ 0x5d, 0xff },
+	{ 0x5e, 0xff },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x86 },
+	{ 0x61, 0x14 },
+	{ 0x62, 0xc0 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x7a },
+	{ 0x65, 0x9f },
+	{ 0x66, 0x5a },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x78 },
+	{ 0x69, 0xed },
+	{ 0x6a, 0x10 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x87 },
+	{ 0x6d, 0x44 },
+	{ 0x6e, 0x8b },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x7f },
+	{ 0x71, 0xff },
+	{ 0x72, 0xff },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x84 },
+	{ 0x75, 0xe5 },
+	{ 0x76, 0x66 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x7a },
+	{ 0x79, 0xad },
+	{ 0x7a, 0xbe },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x7b },
+	{ 0x7d, 0x4d },
+	{ 0x7e, 0xd5 },
+	{ 0x7f, 0x00 },
+	/*Page 50 (0x32) Dump*/
+	{ 0x00, 0x32 },
+	{ 0x08, 0x84 },
+	{ 0x09, 0xc2 },
+	{ 0x0a, 0x36 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x7f },
+	{ 0x0d, 0xff },
+	{ 0x0e, 0xff },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x83 },
+	{ 0x11, 0xe7 },
+	{ 0x12, 0x46 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x7b },
+	{ 0x15, 0x37 },
+	{ 0x16, 0x71 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x7c },
+	{ 0x19, 0x54 },
+	{ 0x1a, 0x9a },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x84 },
+	{ 0x1d, 0x8b },
+	{ 0x1e, 0xd8 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x7f },
+	{ 0x21, 0xff },
+	{ 0x22, 0xff },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x83 },
+	{ 0x25, 0x20 },
+	{ 0x26, 0x22 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x7b },
+	{ 0x29, 0xad },
+	{ 0x2a, 0x46 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x7c },
+	{ 0x2d, 0xc8 },
+	{ 0x2e, 0x0c },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x84 },
+	{ 0x31, 0x75 },
+	{ 0x32, 0x9a },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x7f },
+	{ 0x35, 0xff },
+	{ 0x36, 0xff },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x85 },
+	{ 0x39, 0x8f },
+	{ 0x3a, 0xf4 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x7d },
+	{ 0x3d, 0x49 },
+	{ 0x3e, 0x46 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x7a },
+	{ 0x41, 0x70 },
+	{ 0x42, 0x38 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x82 },
+	{ 0x45, 0x9e },
+	{ 0x46, 0x60 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x7f },
+	{ 0x49, 0xff },
+	{ 0x4a, 0xff },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x7f },
+	{ 0x5d, 0xff },
+	{ 0x5e, 0xff },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x7f },
+	{ 0x71, 0xff },
+	{ 0x72, 0xff },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 51 (0x33) Dump*/
+	{ 0x00, 0x33 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x7f },
+	{ 0x0d, 0xff },
+	{ 0x0e, 0xff },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x7f },
+	{ 0x21, 0xff },
+	{ 0x22, 0xff },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x7f },
+	{ 0x25, 0xff },
+	{ 0x26, 0xff },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x04 },
+	{ 0x29, 0x02 },
+	{ 0x2a, 0x30 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0xeb },
+	{ 0x2d, 0x53 },
+	{ 0x2e, 0xcd },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x3f },
+	{ 0x31, 0x1f },
+	{ 0x32, 0x1e },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x43 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x03 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x7f },
+	{ 0x3d, 0xff },
+	{ 0x3e, 0xff },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x8e },
+	{ 0x45, 0x7a },
+	{ 0x46, 0x54 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x76 },
+	{ 0x49, 0xc3 },
+	{ 0x4a, 0xb6 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0xbd },
+	{ 0x4d, 0x33 },
+	{ 0x4e, 0x8f },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x20 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x01 },
+	{ 0x56, 0x63 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x01 },
+	{ 0x5a, 0x63 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x01 },
+	{ 0x5e, 0x63 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7e },
+	{ 0x61, 0x55 },
+	{ 0x62, 0xdb },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x83 },
+	{ 0x65, 0x4e },
+	{ 0x66, 0xbe },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x7f },
+	{ 0x69, 0xff },
+	{ 0x6a, 0xff },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x7f },
+	{ 0x7d, 0xff },
+	{ 0x7e, 0xff },
+	{ 0x7f, 0x00 },
+	/*Page 52 (0x34) Dump*/
+	{ 0x00, 0x34 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x0f },
+	{ 0x0d, 0x99 },
+	{ 0x0e, 0x4b },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x5a },
+	{ 0x11, 0x87 },
+	{ 0x12, 0x2b },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x2d },
+	{ 0x15, 0x41 },
+	{ 0x16, 0x3d },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x5a },
+	{ 0x19, 0x82 },
+	{ 0x1a, 0x7a },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x01 },
+	{ 0x1e, 0x7c },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0xf8 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0xff },
+	{ 0x25, 0x80 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0xfe },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x64 },
+	{ 0x2d, 0x87 },
+	{ 0x2e, 0xed },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x80 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x47 },
+	{ 0x35, 0xc0 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x5a },
+	{ 0x39, 0xc0 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	/* Page 62 (0x3E) Dump*/
+	{ 0x00, 0x3e },
+	{ 0x08, 0x40 },
+	{ 0x09, 0x26 },
+	{ 0x0a, 0xe7 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0xff },
+	{ 0x0d, 0xff },
+	{ 0x0e, 0xff },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x80 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x40 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x7f },
+	{ 0x19, 0xff },
+	{ 0x1a, 0xff },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x7f },
+	{ 0x21, 0xff },
+	{ 0x22, 0xff },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x08 },
+	{ 0x25, 0x04 },
+	{ 0x26, 0xdd },
+	{ 0x27, 0x00 },
+	{ 0x28, 0xc0 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x80 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x0b },
+	{ 0x31, 0xc0 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x29 },
+	{ 0x35, 0x80 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x06 },
+	{ 0x3a, 0xd3 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x7f },
+	{ 0x3d, 0xf9 },
+	{ 0x3e, 0x2d },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0xe0 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x32 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x10 },
+	{ 0x51, 0x3a },
+	{ 0x52, 0x76 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x44 },
+	{ 0x5e, 0x32 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7f },
+	{ 0x61, 0xbb },
+	{ 0x62, 0xce },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x06 },
+	{ 0x66, 0xd3 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x7f },
+	{ 0x69, 0xf9 },
+	{ 0x6a, 0x2d },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0xde },
+	{ 0x6d, 0x40 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0xea },
+	{ 0x71, 0xe1 },
+	{ 0x72, 0x47 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x29 },
+	{ 0x75, 0x40 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x0b },
+	{ 0x79, 0xc1 },
+	{ 0x7a, 0x16 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0xc0 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 63 (0x3F) Dump*/
+	{ 0x00, 0x3f },
+	{ 0x08, 0xe2 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x35 },
+	{ 0x0d, 0x20 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x13 },
+	{ 0x11, 0x5a },
+	{ 0x12, 0x76 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0xd7 },
+	{ 0x15, 0x41 },
+	{ 0x16, 0xa0 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0xff },
+	{ 0x19, 0xf0 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x88 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x18 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x30 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0xd0 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x03 },
+	{ 0x3a, 0x84 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0xb2 },
+	{ 0x3e, 0x55 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x0e },
+	{ 0x41, 0x5b },
+	{ 0x42, 0xde },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x7f },
+	{ 0x45, 0xff },
+	{ 0x46, 0xff },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x02 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x20 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x51 },
+	{ 0x56, 0x26 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x40 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x0c },
+	{ 0x5e, 0xdc },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x02 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x02 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x20 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x40 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0xe0 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0xc0 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x7f },
+	{ 0x7e, 0xf7 },
+	{ 0x7f, 0x00 },
+	/*Page 64 (0x40) Dump*/
+	{ 0x00, 0x40 },
+	{ 0x08, 0x20 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x08 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0xe0 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0xf8 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x40 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0xc0 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x80 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x50 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x14 },
+	{ 0x2d, 0x40 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x1c },
+	{ 0x31, 0xc0 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x23 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x21 },
+	{ 0x39, 0x80 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0xcd },
+	{ 0x3e, 0x7b },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x7f },
+	{ 0x41, 0x32 },
+	{ 0x42, 0x85 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x01 },
+	{ 0x45, 0xce },
+	{ 0x46, 0xdc },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x89 },
+	{ 0x4a, 0x21 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x7f },
+	{ 0x4d, 0x76 },
+	{ 0x4e, 0xdf },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x2d },
+	{ 0x52, 0xc6 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x7f },
+	{ 0x55, 0xd2 },
+	{ 0x56, 0x3a },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x05 },
+	{ 0x59, 0x3e },
+	{ 0x5a, 0x9c },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x08 },
+	{ 0x5d, 0x39 },
+	{ 0x5e, 0xd3 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7f },
+	{ 0x61, 0xff },
+	{ 0x62, 0xff },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x84 },
+	{ 0x65, 0x4a },
+	{ 0x66, 0x5c },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x77 },
+	{ 0x69, 0xb2 },
+	{ 0x6a, 0x92 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x7f },
+	{ 0x6d, 0x42 },
+	{ 0x6e, 0x58 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x81 },
+	{ 0x71, 0x6c },
+	{ 0x72, 0x20 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x7f },
+	{ 0x75, 0xa4 },
+	{ 0x76, 0x68 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x81 },
+	{ 0x79, 0xf2 },
+	{ 0x7a, 0xf2 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x7c },
+	{ 0x7d, 0x7f },
+	{ 0x7e, 0xbc },
+	{ 0x7f, 0x00 },
+	/* Page 65 (0x41) Dump*/
+	{ 0x00, 0x41 },
+	{ 0x08, 0x7e },
+	{ 0x09, 0x0b },
+	{ 0x0a, 0xcd },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x83 },
+	{ 0x0d, 0xd9 },
+	{ 0x0e, 0x5b },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0xc0 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x25 },
+	{ 0x16, 0xa3 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x7f },
+	{ 0x19, 0xff },
+	{ 0x1a, 0xff },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0xe0 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x7f },
+	{ 0x22, 0xff },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x08 },
+	{ 0x25, 0xee },
+	{ 0x26, 0x3e },
+	{ 0x27, 0x00 },
+	{ 0x28, 0xf8 },
+	{ 0x29, 0x13 },
+	{ 0x2a, 0x4a },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x07 },
+	{ 0x2d, 0x1f },
+	{ 0x2e, 0x98 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x7e },
+	{ 0x31, 0x56 },
+	{ 0x32, 0x66 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x83 },
+	{ 0x35, 0x0a },
+	{ 0x36, 0x68 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x77 },
+	{ 0x39, 0x4d },
+	{ 0x3a, 0x0f },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x88 },
+	{ 0x3d, 0xff },
+	{ 0x3e, 0xae },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x76 },
+	{ 0x41, 0xc1 },
+	{ 0x42, 0xaf },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x7f },
+	{ 0x45, 0x94 },
+	{ 0x46, 0x03 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x80 },
+	{ 0x49, 0xcd },
+	{ 0x4a, 0xd4 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x0c },
+	{ 0x4d, 0x1c },
+	{ 0x4e, 0xf9 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x7f },
+	{ 0x51, 0xff },
+	{ 0x52, 0xff },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x81 },
+	{ 0x55, 0xa9 },
+	{ 0x56, 0x9b },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x7c },
+	{ 0x59, 0xf5 },
+	{ 0x5a, 0x97 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x71 },
+	{ 0x5d, 0x94 },
+	{ 0x5e, 0xe0 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x99 },
+	{ 0x61, 0xe7 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x7f },
+	{ 0x65, 0xff },
+	{ 0x66, 0xff },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x80 },
+	{ 0x69, 0x6b },
+	{ 0x6a, 0xfe },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x7f },
+	{ 0x6d, 0x32 },
+	{ 0x6e, 0x2c },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x7f },
+	{ 0x71, 0xad },
+	{ 0x72, 0xab },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x80 },
+	{ 0x75, 0x95 },
+	{ 0x76, 0x89 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x44 },
+	{ 0x7a, 0xef },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x44 },
+	{ 0x7e, 0xef },
+	{ 0x7f, 0x00 },
+	/*Page 66 (0x42) Dump*/
+	{ 0x00, 0x42 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x44 },
+	{ 0x0a, 0xef },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x77 },
+	{ 0x0d, 0x6e },
+	{ 0x0e, 0xb8 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x90 },
+	{ 0x11, 0x0e },
+	{ 0x12, 0xd4 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x44 },
+	{ 0x16, 0xef },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x44 },
+	{ 0x1a, 0xef },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x44 },
+	{ 0x1e, 0xef },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x77 },
+	{ 0x21, 0x6e },
+	{ 0x22, 0xb8 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x90 },
+	{ 0x25, 0x0e },
+	{ 0x26, 0xd4 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x1e },
+	{ 0x29, 0xc1 },
+	{ 0x2a, 0x6b },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x77 },
+	{ 0x2d, 0xb3 },
+	{ 0x2e, 0xa7 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x88 },
+	{ 0x31, 0x4c },
+	{ 0x32, 0x59 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x77 },
+	{ 0x35, 0xb3 },
+	{ 0x36, 0xa7 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x77 },
+	{ 0x39, 0x6e },
+	{ 0x3a, 0xb8 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x90 },
+	{ 0x3d, 0x0e },
+	{ 0x3e, 0xd4 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x77 },
+	{ 0x41, 0xb3 },
+	{ 0x42, 0xa7 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x88 },
+	{ 0x45, 0x4c },
+	{ 0x46, 0x59 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x77 },
+	{ 0x49, 0xb3 },
+	{ 0x4a, 0xa7 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x77 },
+	{ 0x4d, 0x6e },
+	{ 0x4e, 0xb8 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x90 },
+	{ 0x51, 0x0e },
+	{ 0x52, 0xd4 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x20 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x7d },
+	{ 0x59, 0x5e },
+	{ 0x5a, 0xe4 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x82 },
+	{ 0x5d, 0xa1 },
+	{ 0x5e, 0x1c },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7d },
+	{ 0x61, 0x5e },
+	{ 0x62, 0xe4 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x7d },
+	{ 0x65, 0x5b },
+	{ 0x66, 0x27 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x85 },
+	{ 0x69, 0x3a },
+	{ 0x6a, 0xbc },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x7f },
+	{ 0x6d, 0xff },
+	{ 0x6e, 0xff },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 67 (0x43) Dump*/
+	{ 0x00, 0x43 },
+	{ 0x08, 0x7d },
+	{ 0x09, 0x56 },
+	{ 0x0a, 0x65 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x84 },
+	{ 0x0d, 0x4a },
+	{ 0x0e, 0x5b },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x7a },
+	{ 0x11, 0x5c },
+	{ 0x12, 0x2e },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x7b },
+	{ 0x15, 0xb5 },
+	{ 0x16, 0xa5 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x88 },
+	{ 0x19, 0x4d },
+	{ 0x1a, 0x6d },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x7e },
+	{ 0x1d, 0xd2 },
+	{ 0x1e, 0x80 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x81 },
+	{ 0x21, 0x98 },
+	{ 0x22, 0x7f },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x7e },
+	{ 0x25, 0x06 },
+	{ 0x26, 0x92 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x7e },
+	{ 0x29, 0x67 },
+	{ 0x2a, 0x81 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x83 },
+	{ 0x2d, 0x26 },
+	{ 0x2e, 0xee },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x20 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0xff },
+	{ 0x45, 0x80 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x7f },
+	{ 0x49, 0x9e },
+	{ 0x4a, 0x8c },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x9e },
+	{ 0x4d, 0xdf },
+	{ 0x4e, 0x06 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x49 },
+	{ 0x51, 0xec },
+	{ 0x52, 0xe2 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x61 },
+	{ 0x55, 0x9a },
+	{ 0x56, 0x28 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0xb5 },
+	{ 0x59, 0x8f },
+	{ 0x5a, 0x29 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x7f },
+	{ 0x5d, 0xff },
+	{ 0x5e, 0xff },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x86 },
+	{ 0x61, 0x14 },
+	{ 0x62, 0xc0 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x7a },
+	{ 0x65, 0x9f },
+	{ 0x66, 0x5a },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x78 },
+	{ 0x69, 0xed },
+	{ 0x6a, 0x10 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x87 },
+	{ 0x6d, 0x44 },
+	{ 0x6e, 0x8b },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x7f },
+	{ 0x71, 0xff },
+	{ 0x72, 0xff },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x84 },
+	{ 0x75, 0xe5 },
+	{ 0x76, 0x66 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x7a },
+	{ 0x79, 0xad },
+	{ 0x7a, 0xbe },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x7b },
+	{ 0x7d, 0x4d },
+	{ 0x7e, 0xd5 },
+	{ 0x7f, 0x00 },
+	/* Page 68 (0x44) Dump*/
+	{ 0x00, 0x44 },
+	{ 0x08, 0x84 },
+	{ 0x09, 0xc2 },
+	{ 0x0a, 0x36 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x7f },
+	{ 0x0d, 0xff },
+	{ 0x0e, 0xff },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x83 },
+	{ 0x11, 0xe7 },
+	{ 0x12, 0x46 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x7b },
+	{ 0x15, 0x37 },
+	{ 0x16, 0x71 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x7c },
+	{ 0x19, 0x54 },
+	{ 0x1a, 0x9a },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x84 },
+	{ 0x1d, 0x8b },
+	{ 0x1e, 0xd8 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x7f },
+	{ 0x21, 0xff },
+	{ 0x22, 0xff },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x83 },
+	{ 0x25, 0x20 },
+	{ 0x26, 0x22 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x7b },
+	{ 0x29, 0xad },
+	{ 0x2a, 0x46 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x7c },
+	{ 0x2d, 0xc8 },
+	{ 0x2e, 0x0c },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x84 },
+	{ 0x31, 0x75 },
+	{ 0x32, 0x9a },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x7f },
+	{ 0x35, 0xff },
+	{ 0x36, 0xff },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x85 },
+	{ 0x39, 0x8f },
+	{ 0x3a, 0xf4 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x7d },
+	{ 0x3d, 0x49 },
+	{ 0x3e, 0x46 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x7a },
+	{ 0x41, 0x70 },
+	{ 0x42, 0x38 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x82 },
+	{ 0x45, 0x9e },
+	{ 0x46, 0x60 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x7f },
+	{ 0x49, 0xff },
+	{ 0x4a, 0xff },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x7f },
+	{ 0x5d, 0xff },
+	{ 0x5e, 0xff },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x7f },
+	{ 0x71, 0xff },
+	{ 0x72, 0xff },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 69 (0x45) Dump*/
+	{ 0x00, 0x45 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x7f },
+	{ 0x0d, 0xff },
+	{ 0x0e, 0xff },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x7f },
+	{ 0x21, 0xff },
+	{ 0x22, 0xff },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x7f },
+	{ 0x25, 0xff },
+	{ 0x26, 0xff },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x04 },
+	{ 0x29, 0x02 },
+	{ 0x2a, 0x30 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0xeb },
+	{ 0x2d, 0x53 },
+	{ 0x2e, 0xcd },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x3f },
+	{ 0x31, 0x1f },
+	{ 0x32, 0x1e },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x43 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x03 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x7f },
+	{ 0x3d, 0xff },
+	{ 0x3e, 0xff },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x8e },
+	{ 0x45, 0x7a },
+	{ 0x46, 0x54 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x76 },
+	{ 0x49, 0xc3 },
+	{ 0x4a, 0xb6 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0xbd },
+	{ 0x4d, 0x33 },
+	{ 0x4e, 0x8f },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x20 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x01 },
+	{ 0x56, 0x63 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x01 },
+	{ 0x5a, 0x63 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x01 },
+	{ 0x5e, 0x63 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x7e },
+	{ 0x61, 0x55 },
+	{ 0x62, 0xdb },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x83 },
+	{ 0x65, 0x4e },
+	{ 0x66, 0xbe },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x7f },
+	{ 0x69, 0xff },
+	{ 0x6a, 0xff },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x7f },
+	{ 0x7d, 0xff },
+	{ 0x7e, 0xff },
+	{ 0x7f, 0x00 },
+	/* Page 70 (0x46) Dump*/
+	{ 0x00, 0x46 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x0f },
+	{ 0x0d, 0x99 },
+	{ 0x0e, 0x4b },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x5a },
+	{ 0x11, 0x87 },
+	{ 0x12, 0x2b },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x2d },
+	{ 0x15, 0x41 },
+	{ 0x16, 0x3d },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x5a },
+	{ 0x19, 0x82 },
+	{ 0x1a, 0x7a },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x0f },
+	{ 0x1d, 0x6b },
+	{ 0x1e, 0x55 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0xf8 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0xff },
+	{ 0x25, 0x80 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0xfe },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x64 },
+	{ 0x2d, 0x87 },
+	{ 0x2e, 0xed },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x80 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x47 },
+	{ 0x35, 0xc0 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x5a },
+	{ 0x39, 0xc0 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	/* ---------------------------------*/
+	/* Begin Instruction Memory (I-RAM_D) Dump*/
+	/* ------------------------------------*/
+	/* Page 152 (0x98) Dump*/
+	{ 0x00, 0x98 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x10 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x10 },
+	{ 0x0e, 0x04 },
+	{ 0x0f, 0x01 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x60 },
+	{ 0x12, 0x03 },
+	{ 0x13, 0xfb },
+	{ 0x14, 0x01 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x20 },
+	{ 0x17, 0x09 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x70 },
+	{ 0x1a, 0x20 },
+	{ 0x1b, 0x05 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x40 },
+	{ 0x1e, 0x04 },
+	{ 0x1f, 0x08 },
+	{ 0x20, 0x01 },
+	{ 0x21, 0x10 },
+	{ 0x22, 0x04 },
+	{ 0x23, 0x01 },
+	{ 0x24, 0x01 },
+	{ 0x25, 0x10 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x01 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x40 },
+	{ 0x2a, 0xdc },
+	{ 0x2b, 0x07 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x60 },
+	{ 0x2e, 0x0c },
+	{ 0x2f, 0x05 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x70 },
+	{ 0x32, 0x0c },
+	{ 0x33, 0x07 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x70 },
+	{ 0x36, 0x20 },
+	{ 0x37, 0x08 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x60 },
+	{ 0x3a, 0x0c },
+	{ 0x3b, 0x07 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x40 },
+	{ 0x3e, 0x04 },
+	{ 0x3f, 0x04 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x80 },
+	{ 0x42, 0x18 },
+	{ 0x43, 0x01 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x40 },
+	{ 0x46, 0x04 },
+	{ 0x47, 0x06 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x60 },
+	{ 0x4a, 0x18 },
+	{ 0x4b, 0x06 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x60 },
+	{ 0x4e, 0x17 },
+	{ 0x4f, 0xfb },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x60 },
+	{ 0x52, 0x0c },
+	{ 0x53, 0x08 },
+	{ 0x54, 0x01 },
+	{ 0x55, 0x10 },
+	{ 0x56, 0x14 },
+	{ 0x57, 0x02 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x01 },
+	{ 0x5d, 0x10 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x02 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x40 },
+	{ 0x62, 0x04 },
+	{ 0x63, 0x06 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x40 },
+	{ 0x66, 0x04 },
+	{ 0x67, 0x04 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x60 },
+	{ 0x6a, 0x0c },
+	{ 0x6b, 0x0e },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x60 },
+	{ 0x6e, 0x0c },
+	{ 0x6f, 0x13 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x60 },
+	{ 0x72, 0x08 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x40 },
+	{ 0x76, 0x04 },
+	{ 0x77, 0x0d },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x40 },
+	{ 0x7a, 0x04 },
+	{ 0x7b, 0x12 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x80 },
+	{ 0x7e, 0x18 },
+	{ 0x7f, 0x0f },
+	/* Page 153 (0x99) Dump*/
+	{ 0x00, 0x99 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x60 },
+	{ 0x0a, 0x18 },
+	{ 0x0b, 0x0c },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x60 },
+	{ 0x0e, 0x0c },
+	{ 0x0f, 0x04 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x60 },
+	{ 0x12, 0x08 },
+	{ 0x13, 0x01 },
+	{ 0x14, 0x01 },
+	{ 0x15, 0x10 },
+	{ 0x16, 0x14 },
+	{ 0x17, 0x01 },
+	{ 0x18, 0x01 },
+	{ 0x19, 0x10 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x01 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x40 },
+	{ 0x1e, 0x04 },
+	{ 0x1f, 0x0d },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x80 },
+	{ 0x22, 0x18 },
+	{ 0x23, 0x0f },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x60 },
+	{ 0x26, 0x18 },
+	{ 0x27, 0x11 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x60 },
+	{ 0x2a, 0x0c },
+	{ 0x2b, 0x04 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x63 },
+	{ 0x2e, 0x90 },
+	{ 0x2f, 0x0d },
+	{ 0x30, 0x01 },
+	{ 0x31, 0x10 },
+	{ 0x32, 0x14 },
+	{ 0x33, 0x01 },
+	{ 0x34, 0x01 },
+	{ 0x35, 0x10 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x01 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x40 },
+	{ 0x3a, 0x04 },
+	{ 0x3b, 0x12 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x80 },
+	{ 0x3e, 0x1c },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x60 },
+	{ 0x42, 0x1c },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x63 },
+	{ 0x46, 0x90 },
+	{ 0x47, 0x12 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x40 },
+	{ 0x4e, 0x18 },
+	{ 0x4f, 0x0a },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x80 },
+	{ 0x52, 0x1c },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x60 },
+	{ 0x56, 0x1c },
+	{ 0x57, 0x01 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x60 },
+	{ 0x5a, 0x0c },
+	{ 0x5b, 0x0a },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x40 },
+	{ 0x62, 0x18 },
+	{ 0x63, 0x0f },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x40 },
+	{ 0x66, 0xfc },
+	{ 0x67, 0x0a },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x60 },
+	{ 0x6a, 0x0c },
+	{ 0x6b, 0x0f },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x60 },
+	{ 0x6e, 0x0c },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x60 },
+	{ 0x72, 0x0c },
+	{ 0x73, 0x01 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x40 },
+	{ 0x76, 0xfc },
+	{ 0x77, 0x0f },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x40 },
+	{ 0x7a, 0x04 },
+	{ 0x7b, 0x0b },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x40 },
+	{ 0x7e, 0x04 },
+	{ 0x7f, 0x10 },
+	/*Page 154 (0x9A) Dump*/
+	{ 0x00, 0x9a },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x60 },
+	{ 0x0a, 0x10 },
+	{ 0x0b, 0x0a },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x63 },
+	{ 0x0e, 0x9c },
+	{ 0x0f, 0x16 },
+	{ 0x10, 0x01 },
+	{ 0x11, 0xb3 },
+	{ 0x12, 0x98 },
+	{ 0x13, 0x15 },
+	{ 0x14, 0x01 },
+	{ 0x15, 0x33 },
+	{ 0x16, 0x94 },
+	{ 0x17, 0x14 },
+	{ 0x18, 0x01 },
+	{ 0x19, 0xb3 },
+	{ 0x1a, 0xa0 },
+	{ 0x1b, 0x18 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x73 },
+	{ 0x1e, 0xa4 },
+	{ 0x1f, 0x19 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x60 },
+	{ 0x22, 0x10 },
+	{ 0x23, 0x0f },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x63 },
+	{ 0x26, 0x9c },
+	{ 0x27, 0x1c },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x40 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x17 },
+	{ 0x2c, 0x01 },
+	{ 0x2d, 0x33 },
+	{ 0x2e, 0x94 },
+	{ 0x2f, 0x1a },
+	{ 0x30, 0x01 },
+	{ 0x31, 0xb3 },
+	{ 0x32, 0x98 },
+	{ 0x33, 0x1b },
+	{ 0x34, 0x01 },
+	{ 0x35, 0xb3 },
+	{ 0x36, 0xa0 },
+	{ 0x37, 0x1e },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x73 },
+	{ 0x3a, 0xa4 },
+	{ 0x3b, 0x1f },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x40 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x1d },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x60 },
+	{ 0x4a, 0x0c },
+	{ 0x4b, 0x17 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x70 },
+	{ 0x4e, 0x0c },
+	{ 0x4f, 0x1d },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x40 },
+	{ 0x5a, 0x04 },
+	{ 0x5b, 0x20 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x60 },
+	{ 0x5e, 0x10 },
+	{ 0x5f, 0x0a },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x63 },
+	{ 0x62, 0xb0 },
+	{ 0x63, 0x23 },
+	{ 0x64, 0x01 },
+	{ 0x65, 0xb3 },
+	{ 0x66, 0xac },
+	{ 0x67, 0x22 },
+	{ 0x68, 0x01 },
+	{ 0x69, 0x33 },
+	{ 0x6a, 0xa8 },
+	{ 0x6b, 0x21 },
+	{ 0x6c, 0x01 },
+	{ 0x6d, 0xb3 },
+	{ 0x6e, 0xb4 },
+	{ 0x6f, 0x25 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x73 },
+	{ 0x72, 0xb8 },
+	{ 0x73, 0x26 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x60 },
+	{ 0x76, 0x10 },
+	{ 0x77, 0x0f },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x63 },
+	{ 0x7a, 0xb0 },
+	{ 0x7b, 0x29 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x40 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x24 },
+	/*Page 155 (0x9B) Dump*/
+	{ 0x00, 0x9b },
+	{ 0x08, 0x01 },
+	{ 0x09, 0x33 },
+	{ 0x0a, 0xa8 },
+	{ 0x0b, 0x27 },
+	{ 0x0c, 0x01 },
+	{ 0x0d, 0xb3 },
+	{ 0x0e, 0xac },
+	{ 0x0f, 0x28 },
+	{ 0x10, 0x01 },
+	{ 0x11, 0xb3 },
+	{ 0x12, 0xb4 },
+	{ 0x13, 0x2b },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x73 },
+	{ 0x16, 0xb8 },
+	{ 0x17, 0x2c },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x40 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x2a },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x63 },
+	{ 0x26, 0xbc },
+	{ 0x27, 0x24 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x73 },
+	{ 0x2a, 0xc0 },
+	{ 0x2b, 0x20 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x63 },
+	{ 0x2e, 0xbc },
+	{ 0x2f, 0x2a },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x73 },
+	{ 0x32, 0xc0 },
+	{ 0x33, 0x20 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x40 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x2d },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x40 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x2e },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x21 },
+	{ 0x42, 0xf0 },
+	{ 0x43, 0x0a },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x21 },
+	{ 0x46, 0xec },
+	{ 0x47, 0x0b },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x60 },
+	{ 0x4a, 0x0c },
+	{ 0x4b, 0x2d },
+	{ 0x4c, 0x01 },
+	{ 0x4d, 0x20 },
+	{ 0x4e, 0x78 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x01 },
+	{ 0x51, 0x20 },
+	{ 0x52, 0x7c },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x01 },
+	{ 0x55, 0x14 },
+	{ 0x56, 0x82 },
+	{ 0x57, 0xbe },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x21 },
+	{ 0x5a, 0xf0 },
+	{ 0x5b, 0x45 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x60 },
+	{ 0x5e, 0x0c },
+	{ 0x5f, 0x2e },
+	{ 0x60, 0x01 },
+	{ 0x61, 0x20 },
+	{ 0x62, 0x78 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x01 },
+	{ 0x65, 0x20 },
+	{ 0x66, 0x7c },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x01 },
+	{ 0x69, 0x14 },
+	{ 0x6a, 0x82 },
+	{ 0x6b, 0xbe },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x21 },
+	{ 0x6e, 0xec },
+	{ 0x6f, 0x47 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x21 },
+	{ 0x72, 0xf0 },
+	{ 0x73, 0x46 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x60 },
+	{ 0x76, 0x0c },
+	{ 0x77, 0x4e },
+	{ 0x78, 0x01 },
+	{ 0x79, 0x20 },
+	{ 0x7a, 0x78 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x01 },
+	{ 0x7d, 0x20 },
+	{ 0x7e, 0x7c },
+	{ 0x7f, 0x00 },
+	/* Page 156 (0x9C) Dump*/
+	{ 0x00, 0x9c },
+	{ 0x08, 0x01 },
+	{ 0x09, 0x14 },
+	{ 0x0a, 0x82 },
+	{ 0x0b, 0xb4 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x21 },
+	{ 0x0e, 0xf0 },
+	{ 0x0f, 0x48 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x60 },
+	{ 0x12, 0x0c },
+	{ 0x13, 0x70 },
+	{ 0x14, 0x01 },
+	{ 0x15, 0x20 },
+	{ 0x16, 0x78 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x01 },
+	{ 0x19, 0x20 },
+	{ 0x1a, 0x7c },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x01 },
+	{ 0x1d, 0x14 },
+	{ 0x1e, 0x82 },
+	{ 0x1f, 0xb4 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x60 },
+	{ 0x22, 0x0c },
+	{ 0x23, 0x83 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x61 },
+	{ 0x26, 0x50 },
+	{ 0x27, 0x9b },
+	{ 0x28, 0x01 },
+	{ 0x29, 0xb1 },
+	{ 0x2a, 0x4c },
+	{ 0x2b, 0x9a },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x40 },
+	{ 0x2e, 0x04 },
+	{ 0x2f, 0x99 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x71 },
+	{ 0x32, 0x48 },
+	{ 0x33, 0x99 },
+	{ 0x34, 0x01 },
+	{ 0x35, 0xb1 },
+	{ 0x36, 0x54 },
+	{ 0x37, 0x9d },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x71 },
+	{ 0x3a, 0x58 },
+	{ 0x3b, 0x9e },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x61 },
+	{ 0x3e, 0x64 },
+	{ 0x3f, 0x9e },
+	{ 0x40, 0x01 },
+	{ 0x41, 0xb1 },
+	{ 0x42, 0x60 },
+	{ 0x43, 0x9d },
+	{ 0x44, 0x01 },
+	{ 0x45, 0x31 },
+	{ 0x46, 0x5c },
+	{ 0x47, 0x9c },
+	{ 0x48, 0x01 },
+	{ 0x49, 0xb1 },
+	{ 0x4a, 0x68 },
+	{ 0x4b, 0xa0 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x71 },
+	{ 0x4e, 0x6c },
+	{ 0x4f, 0xa1 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x40 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x9f },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x60 },
+	{ 0x5e, 0x0c },
+	{ 0x5f, 0x96 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x61 },
+	{ 0x62, 0x50 },
+	{ 0x63, 0xa4 },
+	{ 0x64, 0x01 },
+	{ 0x65, 0xb1 },
+	{ 0x66, 0x4c },
+	{ 0x67, 0xa3 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x40 },
+	{ 0x6a, 0x04 },
+	{ 0x6b, 0xa2 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x71 },
+	{ 0x6e, 0x48 },
+	{ 0x6f, 0xa2 },
+	{ 0x70, 0x01 },
+	{ 0x71, 0xb1 },
+	{ 0x72, 0x54 },
+	{ 0x73, 0xa6 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x71 },
+	{ 0x76, 0x58 },
+	{ 0x77, 0xa7 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x61 },
+	{ 0x7a, 0x64 },
+	{ 0x7b, 0xa7 },
+	{ 0x7c, 0x01 },
+	{ 0x7d, 0xb1 },
+	{ 0x7e, 0x60 },
+	{ 0x7f, 0xa6 },
+	/*Page 157 (0x9D) Dump*/
+	{ 0x00, 0x9d },
+	{ 0x08, 0x01 },
+	{ 0x09, 0x31 },
+	{ 0x0a, 0x5c },
+	{ 0x0b, 0xa5 },
+	{ 0x0c, 0x01 },
+	{ 0x0d, 0xb1 },
+	{ 0x0e, 0x68 },
+	{ 0x0f, 0xa9 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x71 },
+	{ 0x12, 0x6c },
+	{ 0x13, 0xaa },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x40 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0xa8 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x61 },
+	{ 0x22, 0x44 },
+	{ 0x23, 0x9f },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x61 },
+	{ 0x26, 0x44 },
+	{ 0x27, 0xa8 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x40 },
+	{ 0x2e, 0x10 },
+	{ 0x2f, 0xab },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x40 },
+	{ 0x32, 0x10 },
+	{ 0x33, 0xac },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x60 },
+	{ 0x36, 0x10 },
+	{ 0x37, 0xab },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x70 },
+	{ 0x3a, 0x08 },
+	{ 0x3b, 0x83 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x60 },
+	{ 0x3e, 0x10 },
+	{ 0x3f, 0xac },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x70 },
+	{ 0x42, 0x08 },
+	{ 0x43, 0x96 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x40 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0xad },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x40 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0xae },
+	{ 0x50, 0x00 },
+	{ 0x51, 0xc1 },
+	{ 0x52, 0x24 },
+	{ 0x53, 0xad },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x71 },
+	{ 0x56, 0x28 },
+	{ 0x57, 0xb3 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0xc1 },
+	{ 0x5a, 0x24 },
+	{ 0x5b, 0xae },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x71 },
+	{ 0x5e, 0x28 },
+	{ 0x5f, 0xb6 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x40 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0xb2 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x63 },
+	{ 0x66, 0xe4 },
+	{ 0x67, 0xb2 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x40 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0xb5 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x63 },
+	{ 0x6e, 0xe4 },
+	{ 0x6f, 0xb5 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x40 },
+	{ 0x72, 0x04 },
+	{ 0x73, 0xb1 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x61 },
+	{ 0x76, 0x78 },
+	{ 0x77, 0xb1 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x40 },
+	{ 0x7a, 0x04 },
+	{ 0x7b, 0xb4 },
+	{ 0x7c, 0x01 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x08 },
+	{ 0x7f, 0xb4 },
+	/*Page 158 (0x9E) Dump*/
+	{ 0x00, 0x9e },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x61 },
+	{ 0x0a, 0x78 },
+	{ 0x0b, 0xb4 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x01 },
+	{ 0x11, 0x10 },
+	{ 0x12, 0x0c },
+	{ 0x13, 0x02 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x40 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0xb1 },
+	{ 0x18, 0x01 },
+	{ 0x19, 0x10 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x02 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x61 },
+	{ 0x26, 0x78 },
+	{ 0x27, 0xb1 },
+	{ 0x28, 0x01 },
+	{ 0x29, 0x03 },
+	{ 0x2a, 0xdb },
+	{ 0x2b, 0xfb },
+	{ 0x2c, 0x01 },
+	{ 0x2d, 0x01 },
+	{ 0x2e, 0x7f },
+	{ 0x2f, 0xfb },
+	{ 0x30, 0x01 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x0b },
+	{ 0x33, 0xfb },
+	{ 0x34, 0x01 },
+	{ 0x35, 0x10 },
+	{ 0x36, 0x10 },
+	{ 0x37, 0x07 },
+	{ 0x38, 0x01 },
+	{ 0x39, 0x10 },
+	{ 0x3a, 0x10 },
+	{ 0x3b, 0x02 },
+	{ 0x3c, 0x01 },
+	{ 0x3d, 0x10 },
+	{ 0x3e, 0x0c },
+	{ 0x3f, 0x03 },
+	{ 0x40, 0x01 },
+	{ 0x41, 0x10 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x03 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x91 },
+	{ 0x46, 0x78 },
+	{ 0x47, 0x02 },
+	{ 0x48, 0x01 },
+	{ 0x49, 0x10 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x01 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x91 },
+	{ 0x4e, 0x78 },
+	{ 0x4f, 0x3e },
+	{ 0x50, 0x01 },
+	{ 0x51, 0x10 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x0b },
+	{ 0x54, 0x01 },
+	{ 0x55, 0x03 },
+	{ 0x56, 0xdf },
+	{ 0x57, 0xfb },
+	{ 0x58, 0x01 },
+	{ 0x59, 0x03 },
+	{ 0x5a, 0xe3 },
+	{ 0x5b, 0xfb },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x01 },
+	{ 0x61, 0x10 },
+	{ 0x62, 0x10 },
+	{ 0x63, 0x03 },
+	{ 0x64, 0x01 },
+	{ 0x65, 0x10 },
+	{ 0x66, 0x0c },
+	{ 0x67, 0x04 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x91 },
+	{ 0x6a, 0x78 },
+	{ 0x6b, 0x06 },
+	{ 0x6c, 0x01 },
+	{ 0x6d, 0x10 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x04 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x91 },
+	{ 0x72, 0x78 },
+	{ 0x73, 0x08 },
+	{ 0x74, 0x01 },
+	{ 0x75, 0x10 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x01 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x91 },
+	{ 0x7a, 0x78 },
+	{ 0x7b, 0x04 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 159 (0x9F) Dump*/
+	{ 0x00, 0x9f },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x83 },
+	{ 0x0e, 0xd4 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x93 },
+	{ 0x12, 0xc4 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x73 },
+	{ 0x16, 0x8f },
+	{ 0x17, 0xfb },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x93 },
+	{ 0x1e, 0xd4 },
+	{ 0x1f, 0x02 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x73 },
+	{ 0x22, 0x8b },
+	{ 0x23, 0xfb },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x93 },
+	{ 0x2a, 0xd4 },
+	{ 0x2b, 0x02 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x73 },
+	{ 0x2e, 0x87 },
+	{ 0x2f, 0xfb },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x93 },
+	{ 0x36, 0xd4 },
+	{ 0x37, 0x02 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x73 },
+	{ 0x3a, 0x73 },
+	{ 0x3b, 0xfb },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x93 },
+	{ 0x42, 0xd4 },
+	{ 0x43, 0x02 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x73 },
+	{ 0x46, 0x6f },
+	{ 0x47, 0xfb },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x93 },
+	{ 0x4e, 0xd4 },
+	{ 0x4f, 0x02 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x73 },
+	{ 0x52, 0x6b },
+	{ 0x53, 0xfb },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x61 },
+	{ 0x56, 0x78 },
+	{ 0x57, 0xb1 },
+	{ 0x58, 0x01 },
+	{ 0x59, 0x03 },
+	{ 0x5a, 0xdb },
+	{ 0x5b, 0xfb },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x40 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0xbb },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x01 },
+	{ 0x65, 0x10 },
+	{ 0x66, 0x10 },
+	{ 0x67, 0x0b },
+	{ 0x68, 0x01 },
+	{ 0x69, 0x01 },
+	{ 0x6a, 0x7f },
+	{ 0x6b, 0xfb },
+	{ 0x6c, 0x01 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x0b },
+	{ 0x6f, 0xfb },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x61 },
+	{ 0x72, 0x78 },
+	{ 0x73, 0xbb },
+	{ 0x74, 0x01 },
+	{ 0x75, 0x10 },
+	{ 0x76, 0x10 },
+	{ 0x77, 0x02 },
+	{ 0x78, 0x01 },
+	{ 0x79, 0x10 },
+	{ 0x7a, 0x0c },
+	{ 0x7b, 0x03 },
+	{ 0x7c, 0x01 },
+	{ 0x7d, 0x10 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x03 },
+	/* Page 160 (0xA0) Dump*/
+	{ 0x00, 0xa0 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x93 },
+	{ 0x0a, 0xc8 },
+	{ 0x0b, 0x02 },
+	{ 0x0c, 0x01 },
+	{ 0x0d, 0x10 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x01 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x93 },
+	{ 0x12, 0xcc },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x01 },
+	{ 0x19, 0x10 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x0d },
+	{ 0x1c, 0x01 },
+	{ 0x1d, 0x03 },
+	{ 0x1e, 0xdf },
+	{ 0x1f, 0xfb },
+	{ 0x20, 0x01 },
+	{ 0x21, 0x03 },
+	{ 0x22, 0xe3 },
+	{ 0x23, 0xfb },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x61 },
+	{ 0x26, 0x78 },
+	{ 0x27, 0xbb },
+	{ 0x28, 0x01 },
+	{ 0x29, 0x10 },
+	{ 0x2a, 0x10 },
+	{ 0x2b, 0x05 },
+	{ 0x2c, 0x01 },
+	{ 0x2d, 0x10 },
+	{ 0x2e, 0x0c },
+	{ 0x2f, 0x02 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x93 },
+	{ 0x32, 0xd0 },
+	{ 0x33, 0x05 },
+	{ 0x34, 0x01 },
+	{ 0x35, 0x10 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x05 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x91 },
+	{ 0x3a, 0x78 },
+	{ 0x3b, 0x03 },
+	{ 0x3c, 0x01 },
+	{ 0x3d, 0x10 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x03 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x91 },
+	{ 0x4a, 0x78 },
+	{ 0x4b, 0x06 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x91 },
+	{ 0x52, 0x40 },
+	{ 0x53, 0x01 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x60 },
+	{ 0x56, 0x08 },
+	{ 0x57, 0xb1 },
+	{ 0x58, 0x01 },
+	{ 0x59, 0x01 },
+	{ 0x5a, 0x2f },
+	{ 0x5b, 0xfb },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x40 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0xbb },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x61 },
+	{ 0x62, 0x83 },
+	{ 0x63, 0xfb },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x60 },
+	{ 0x66, 0x0c },
+	{ 0x67, 0xbb },
+	{ 0x68, 0x01 },
+	{ 0x69, 0x10 },
+	{ 0x6a, 0x10 },
+	{ 0x6b, 0x02 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x40 },
+	{ 0x6e, 0x04 },
+	{ 0x6f, 0xb9 },
+	{ 0x70, 0x01 },
+	{ 0x71, 0x10 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x02 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x40 },
+	{ 0x7a, 0x04 },
+	{ 0x7b, 0xb9 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x62 },
+	{ 0x7e, 0x94 },
+	{ 0x7f, 0xb8 },
+	/* Page 161 (0xA1) Dump*/
+	{ 0x00, 0xa1 },
+	{ 0x08, 0x01 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x0c },
+	{ 0x0b, 0xb9 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x61 },
+	{ 0x12, 0x34 },
+	{ 0x13, 0xb8 },
+	{ 0x14, 0x01 },
+	{ 0x15, 0x10 },
+	{ 0x16, 0x0c },
+	{ 0x17, 0x02 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x71 },
+	{ 0x1a, 0x30 },
+	{ 0x1b, 0xb9 },
+	{ 0x1c, 0x01 },
+	{ 0x1d, 0x10 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x02 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x61 },
+	{ 0x22, 0x3c },
+	{ 0x23, 0xb8 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x71 },
+	{ 0x26, 0x38 },
+	{ 0x27, 0xb9 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x81 },
+	{ 0x32, 0x74 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x61 },
+	{ 0x36, 0x74 },
+	{ 0x37, 0xad },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x61 },
+	{ 0x3a, 0x74 },
+	{ 0x3b, 0xae },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x40 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0xb7 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x40 },
+	{ 0x42, 0x24 },
+	{ 0x43, 0xaf },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x40 },
+	{ 0x46, 0x24 },
+	{ 0x47, 0xb0 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x63 },
+	{ 0x4a, 0x60 },
+	{ 0x4b, 0x83 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x73 },
+	{ 0x4e, 0x64 },
+	{ 0x4f, 0xaf },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x63 },
+	{ 0x52, 0x60 },
+	{ 0x53, 0xb0 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x73 },
+	{ 0x56, 0x64 },
+	{ 0x57, 0x96 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x40 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0xbc },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x40 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0xbd },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x60 },
+	{ 0x66, 0x0c },
+	{ 0x67, 0xbc },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x61 },
+	{ 0x6a, 0x8c },
+	{ 0x6b, 0xc0 },
+	{ 0x6c, 0x01 },
+	{ 0x6d, 0xb1 },
+	{ 0x6e, 0x88 },
+	{ 0x6f, 0xbf },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x40 },
+	{ 0x72, 0x04 },
+	{ 0x73, 0xbe },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x71 },
+	{ 0x76, 0x84 },
+	{ 0x77, 0xbe },
+	{ 0x78, 0x01 },
+	{ 0x79, 0xb1 },
+	{ 0x7a, 0x90 },
+	{ 0x7b, 0xc2 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x71 },
+	{ 0x7e, 0x94 },
+	{ 0x7f, 0xc3 },
+	/*Page 162 (0xA2) Dump*/
+	{ 0x00, 0xa2 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x61 },
+	{ 0x0a, 0xa0 },
+	{ 0x0b, 0xc3 },
+	{ 0x0c, 0x01 },
+	{ 0x0d, 0xb1 },
+	{ 0x0e, 0x9c },
+	{ 0x0f, 0xc2 },
+	{ 0x10, 0x01 },
+	{ 0x11, 0x31 },
+	{ 0x12, 0x98 },
+	{ 0x13, 0xc1 },
+	{ 0x14, 0x01 },
+	{ 0x15, 0xb1 },
+	{ 0x16, 0xa4 },
+	{ 0x17, 0xc5 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x71 },
+	{ 0x1a, 0xa8 },
+	{ 0x1b, 0xc6 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x40 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0xc4 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x61 },
+	{ 0x2a, 0xaf },
+	{ 0x2b, 0xfb },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x40 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0xc8 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x60 },
+	{ 0x3a, 0x0c },
+	{ 0x3b, 0xc4 },
+	{ 0x3c, 0x01 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x20 },
+	{ 0x3f, 0xc8 },
+	{ 0x40, 0x01 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x0c },
+	{ 0x43, 0xc8 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x60 },
+	{ 0x46, 0x0c },
+	{ 0x47, 0xc4 },
+	{ 0x48, 0x01 },
+	{ 0x49, 0x10 },
+	{ 0x4a, 0x0c },
+	{ 0x4b, 0x02 },
+	{ 0x4c, 0x01 },
+	{ 0x4d, 0x10 },
+	{ 0x4e, 0x10 },
+	{ 0x4f, 0x04 },
+	{ 0x50, 0x01 },
+	{ 0x51, 0x10 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x04 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x60 },
+	{ 0x56, 0x0c },
+	{ 0x57, 0xc8 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x01 },
+	{ 0x5d, 0x10 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x02 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x60 },
+	{ 0x62, 0x20 },
+	{ 0x63, 0xc8 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x40 },
+	{ 0x6e, 0x04 },
+	{ 0x6f, 0xc9 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x60 },
+	{ 0x72, 0x0c },
+	{ 0x73, 0xc9 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x61 },
+	{ 0x76, 0xb8 },
+	{ 0x77, 0xcc },
+	{ 0x78, 0x01 },
+	{ 0x79, 0xb1 },
+	{ 0x7a, 0xb4 },
+	{ 0x7b, 0xcb },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x40 },
+	{ 0x7e, 0x04 },
+	{ 0x7f, 0xca },
+	/*Page 163 (0xA3) Dump*/
+	{ 0x00, 0xa3 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x71 },
+	{ 0x0a, 0xb0 },
+	{ 0x0b, 0xca },
+	{ 0x0c, 0x01 },
+	{ 0x0d, 0xb1 },
+	{ 0x0e, 0xbc },
+	{ 0x0f, 0xce },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x71 },
+	{ 0x12, 0xc0 },
+	{ 0x13, 0xcf },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x61 },
+	{ 0x16, 0xcc },
+	{ 0x17, 0xcf },
+	{ 0x18, 0x01 },
+	{ 0x19, 0xb1 },
+	{ 0x1a, 0xc8 },
+	{ 0x1b, 0xce },
+	{ 0x1c, 0x01 },
+	{ 0x1d, 0x31 },
+	{ 0x1e, 0xc4 },
+	{ 0x1f, 0xcd },
+	{ 0x20, 0x01 },
+	{ 0x21, 0xb1 },
+	{ 0x22, 0xd0 },
+	{ 0x23, 0xd1 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x71 },
+	{ 0x26, 0xd4 },
+	{ 0x27, 0xd2 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x61 },
+	{ 0x2a, 0xe0 },
+	{ 0x2b, 0xd2 },
+	{ 0x2c, 0x01 },
+	{ 0x2d, 0xb1 },
+	{ 0x2e, 0xdc },
+	{ 0x2f, 0xd1 },
+	{ 0x30, 0x01 },
+	{ 0x31, 0x31 },
+	{ 0x32, 0xd8 },
+	{ 0x33, 0xd0 },
+	{ 0x34, 0x01 },
+	{ 0x35, 0xb1 },
+	{ 0x36, 0xe4 },
+	{ 0x37, 0xd4 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x71 },
+	{ 0x3a, 0xe8 },
+	{ 0x3b, 0xd5 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x61 },
+	{ 0x3e, 0xf4 },
+	{ 0x3f, 0xd5 },
+	{ 0x40, 0x01 },
+	{ 0x41, 0xb1 },
+	{ 0x42, 0xf0 },
+	{ 0x43, 0xd4 },
+	{ 0x44, 0x01 },
+	{ 0x45, 0x31 },
+	{ 0x46, 0xec },
+	{ 0x47, 0xd3 },
+	{ 0x48, 0x01 },
+	{ 0x49, 0xb1 },
+	{ 0x4a, 0xf8 },
+	{ 0x4b, 0xd7 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x71 },
+	{ 0x4e, 0xfc },
+	{ 0x4f, 0xd8 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x40 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0xd6 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x60 },
+	{ 0x5e, 0x0c },
+	{ 0x5f, 0xbd },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x62 },
+	{ 0x62, 0x0c },
+	{ 0x63, 0xdb },
+	{ 0x64, 0x01 },
+	{ 0x65, 0xb2 },
+	{ 0x66, 0x08 },
+	{ 0x67, 0xda },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x40 },
+	{ 0x6a, 0x04 },
+	{ 0x6b, 0xd9 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x72 },
+	{ 0x6e, 0x04 },
+	{ 0x6f, 0xd9 },
+	{ 0x70, 0x01 },
+	{ 0x71, 0xb2 },
+	{ 0x72, 0x10 },
+	{ 0x73, 0xdd },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x72 },
+	{ 0x76, 0x14 },
+	{ 0x77, 0xde },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x62 },
+	{ 0x7a, 0x20 },
+	{ 0x7b, 0xde },
+	{ 0x7c, 0x01 },
+	{ 0x7d, 0xb2 },
+	{ 0x7e, 0x1c },
+	{ 0x7f, 0xdd },
+	/*Page 164 (0xA4) Dump*/
+	{ 0x00, 0xa4 },
+	{ 0x08, 0x01 },
+	{ 0x09, 0x32 },
+	{ 0x0a, 0x18 },
+	{ 0x0b, 0xdc },
+	{ 0x0c, 0x01 },
+	{ 0x0d, 0xb2 },
+	{ 0x0e, 0x24 },
+	{ 0x0f, 0xe0 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x72 },
+	{ 0x12, 0x28 },
+	{ 0x13, 0xe1 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x40 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0xdf },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x60 },
+	{ 0x22, 0x0c },
+	{ 0x23, 0xbd },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x61 },
+	{ 0x26, 0x8c },
+	{ 0x27, 0xe4 },
+	{ 0x28, 0x01 },
+	{ 0x29, 0xb1 },
+	{ 0x2a, 0x88 },
+	{ 0x2b, 0xe3 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x40 },
+	{ 0x2e, 0x04 },
+	{ 0x2f, 0xe2 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x71 },
+	{ 0x32, 0x84 },
+	{ 0x33, 0xe2 },
+	{ 0x34, 0x01 },
+	{ 0x35, 0xb1 },
+	{ 0x36, 0x90 },
+	{ 0x37, 0xe6 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x71 },
+	{ 0x3a, 0x94 },
+	{ 0x3b, 0xe7 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x61 },
+	{ 0x3e, 0xa0 },
+	{ 0x3f, 0xe7 },
+	{ 0x40, 0x01 },
+	{ 0x41, 0xb1 },
+	{ 0x42, 0x9c },
+	{ 0x43, 0xe6 },
+	{ 0x44, 0x01 },
+	{ 0x45, 0x31 },
+	{ 0x46, 0x98 },
+	{ 0x47, 0xe5 },
+	{ 0x48, 0x01 },
+	{ 0x49, 0xb1 },
+	{ 0x4a, 0xa4 },
+	{ 0x4b, 0xe9 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x71 },
+	{ 0x4e, 0xa8 },
+	{ 0x4f, 0xea },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x40 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0xe8 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x60 },
+	{ 0x5e, 0x0c },
+	{ 0x5f, 0xe8 },
+	{ 0x60, 0x01 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x20 },
+	{ 0x63, 0xc8 },
+	{ 0x64, 0x01 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x0c },
+	{ 0x67, 0xc8 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x60 },
+	{ 0x6a, 0x0c },
+	{ 0x6b, 0xe8 },
+	{ 0x6c, 0x01 },
+	{ 0x6d, 0x10 },
+	{ 0x6e, 0x0c },
+	{ 0x6f, 0x02 },
+	{ 0x70, 0x01 },
+	{ 0x71, 0x10 },
+	{ 0x72, 0x10 },
+	{ 0x73, 0x04 },
+	{ 0x74, 0x01 },
+	{ 0x75, 0x10 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x04 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x60 },
+	{ 0x7a, 0x0c },
+	{ 0x7b, 0xc8 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 165 (0xA5) Dump*/
+	{ 0x00, 0xa5 },
+	{ 0x08, 0x01 },
+	{ 0x09, 0x10 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x02 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x60 },
+	{ 0x0e, 0x20 },
+	{ 0x0f, 0xc8 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x40 },
+	{ 0x1a, 0x04 },
+	{ 0x1b, 0xeb },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x60 },
+	{ 0x1e, 0x0c },
+	{ 0x1f, 0xeb },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x61 },
+	{ 0x22, 0xb8 },
+	{ 0x23, 0xee },
+	{ 0x24, 0x01 },
+	{ 0x25, 0xb1 },
+	{ 0x26, 0xb4 },
+	{ 0x27, 0xed },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x40 },
+	{ 0x2a, 0x04 },
+	{ 0x2b, 0xec },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x71 },
+	{ 0x2e, 0xb0 },
+	{ 0x2f, 0xec },
+	{ 0x30, 0x01 },
+	{ 0x31, 0xb1 },
+	{ 0x32, 0xbc },
+	{ 0x33, 0xf0 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x71 },
+	{ 0x36, 0xc0 },
+	{ 0x37, 0xf1 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x61 },
+	{ 0x3a, 0xcc },
+	{ 0x3b, 0xf1 },
+	{ 0x3c, 0x01 },
+	{ 0x3d, 0xb1 },
+	{ 0x3e, 0xc8 },
+	{ 0x3f, 0xf0 },
+	{ 0x40, 0x01 },
+	{ 0x41, 0x31 },
+	{ 0x42, 0xc4 },
+	{ 0x43, 0xef },
+	{ 0x44, 0x01 },
+	{ 0x45, 0xb1 },
+	{ 0x46, 0xd0 },
+	{ 0x47, 0xf3 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x71 },
+	{ 0x4a, 0xd4 },
+	{ 0x4b, 0xf4 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x61 },
+	{ 0x4e, 0xe0 },
+	{ 0x4f, 0xf4 },
+	{ 0x50, 0x01 },
+	{ 0x51, 0xb1 },
+	{ 0x52, 0xdc },
+	{ 0x53, 0xf3 },
+	{ 0x54, 0x01 },
+	{ 0x55, 0x31 },
+	{ 0x56, 0xd8 },
+	{ 0x57, 0xf2 },
+	{ 0x58, 0x01 },
+	{ 0x59, 0xb1 },
+	{ 0x5a, 0xe4 },
+	{ 0x5b, 0xf6 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x71 },
+	{ 0x5e, 0xe8 },
+	{ 0x5f, 0xf7 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x61 },
+	{ 0x62, 0xf4 },
+	{ 0x63, 0xf7 },
+	{ 0x64, 0x01 },
+	{ 0x65, 0xb1 },
+	{ 0x66, 0xf0 },
+	{ 0x67, 0xf6 },
+	{ 0x68, 0x01 },
+	{ 0x69, 0x31 },
+	{ 0x6a, 0xec },
+	{ 0x6b, 0xf5 },
+	{ 0x6c, 0x01 },
+	{ 0x6d, 0xb1 },
+	{ 0x6e, 0xf8 },
+	{ 0x6f, 0xf9 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x71 },
+	{ 0x72, 0xfc },
+	{ 0x73, 0xfa },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x40 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0xf8 },
+	/*Page 166 (0xA6) Dump*/
+	{ 0x00, 0xa6 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x62 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0xd6 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x62 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0xf8 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x40 },
+	{ 0x16, 0x18 },
+	{ 0x17, 0xfb },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x40 },
+	{ 0x1a, 0x18 },
+	{ 0x1b, 0xfc },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x60 },
+	{ 0x1e, 0x0c },
+	{ 0x1f, 0xbc },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x62 },
+	{ 0x22, 0x0c },
+	{ 0x23, 0xff },
+	{ 0x24, 0x01 },
+	{ 0x25, 0xb2 },
+	{ 0x26, 0x08 },
+	{ 0x27, 0xfe },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x40 },
+	{ 0x2a, 0x04 },
+	{ 0x2b, 0xfd },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x72 },
+	{ 0x2e, 0x04 },
+	{ 0x2f, 0xfd },
+	{ 0x30, 0x01 },
+	{ 0x31, 0xb2 },
+	{ 0x32, 0x11 },
+	{ 0x33, 0x01 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x72 },
+	{ 0x36, 0x15 },
+	{ 0x37, 0x02 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x62 },
+	{ 0x3a, 0x21 },
+	{ 0x3b, 0x02 },
+	{ 0x3c, 0x01 },
+	{ 0x3d, 0xb2 },
+	{ 0x3e, 0x1d },
+	{ 0x3f, 0x01 },
+	{ 0x40, 0x01 },
+	{ 0x41, 0x32 },
+	{ 0x42, 0x19 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x01 },
+	{ 0x45, 0xb2 },
+	{ 0x46, 0x25 },
+	{ 0x47, 0x04 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x72 },
+	{ 0x4a, 0x29 },
+	{ 0x4b, 0x05 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x40 },
+	{ 0x56, 0x01 },
+	{ 0x57, 0x03 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x60 },
+	{ 0x5a, 0x0d },
+	{ 0x5b, 0x03 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x70 },
+	{ 0x5e, 0x0c },
+	{ 0x5f, 0xfb },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x60 },
+	{ 0x62, 0x0c },
+	{ 0x63, 0xfc },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x70 },
+	{ 0x66, 0x0c },
+	{ 0x67, 0xdf },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x40 },
+	{ 0x6a, 0x05 },
+	{ 0x6b, 0x06 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x40 },
+	{ 0x72, 0x05 },
+	{ 0x73, 0x07 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x62 },
+	{ 0x76, 0x2d },
+	{ 0x77, 0x06 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x62 },
+	{ 0x7a, 0x2d },
+	{ 0x7b, 0x07 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 167 (0xA7) Dump*/
+	{ 0x00, 0xa7 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x40 },
+	{ 0x0a, 0x11 },
+	{ 0x0b, 0x08 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x40 },
+	{ 0x0e, 0x11 },
+	{ 0x0f, 0x09 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x63 },
+	{ 0x12, 0x7d },
+	{ 0x13, 0x08 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x73 },
+	{ 0x16, 0x80 },
+	{ 0x17, 0x4e },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x63 },
+	{ 0x1a, 0x7d },
+	{ 0x1b, 0x09 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x73 },
+	{ 0x1e, 0x80 },
+	{ 0x1f, 0x70 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x40 },
+	{ 0x22, 0x01 },
+	{ 0x23, 0x0a },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x40 },
+	{ 0x2a, 0x01 },
+	{ 0x2b, 0x0b },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x61 },
+	{ 0x2e, 0x05 },
+	{ 0x2f, 0x0a },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x61 },
+	{ 0x32, 0x05 },
+	{ 0x33, 0x0b },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x21 },
+	{ 0x36, 0xec },
+	{ 0x37, 0xde },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x40 },
+	{ 0x3a, 0x05 },
+	{ 0x3b, 0x0c },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x40 },
+	{ 0x3e, 0x05 },
+	{ 0x3f, 0x0d },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x21 },
+	{ 0x42, 0xf0 },
+	{ 0x43, 0xdd },
+	{ 0x44, 0x01 },
+	{ 0x45, 0x14 },
+	{ 0x46, 0x81 },
+	{ 0x47, 0x80 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x60 },
+	{ 0x4a, 0x0d },
+	{ 0x4b, 0x0e },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x60 },
+	{ 0x4e, 0x0d },
+	{ 0x4f, 0x0f },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x21 },
+	{ 0x52, 0xf0 },
+	{ 0x53, 0xfb },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x40 },
+	{ 0x56, 0x05 },
+	{ 0x57, 0x28 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x40 },
+	{ 0x5a, 0x05 },
+	{ 0x5b, 0x74 },
+	{ 0x5c, 0x01 },
+	{ 0x5d, 0x14 },
+	{ 0x5e, 0x83 },
+	{ 0x5f, 0xcc },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x21 },
+	{ 0x62, 0xf0 },
+	{ 0x63, 0xfc },
+	{ 0x64, 0x01 },
+	{ 0x65, 0x14 },
+	{ 0x66, 0x83 },
+	{ 0x67, 0xcc },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x6f },
+	{ 0x6a, 0xed },
+	{ 0x6b, 0x1f },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x6f },
+	{ 0x6e, 0xed },
+	{ 0x6f, 0x20 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x30 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x02 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x30 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x02 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x6f },
+	{ 0x7a, 0xed },
+	{ 0x7b, 0x21 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x6f },
+	{ 0x7e, 0xed },
+	{ 0x7f, 0x22 },
+	/* Page 168 (0xA8) Dump*/
+	{ 0x00, 0xa8 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x30 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x02 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x30 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x02 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x6f },
+	{ 0x12, 0xed },
+	{ 0x13, 0x23 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x6f },
+	{ 0x16, 0xed },
+	{ 0x17, 0x24 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x30 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x02 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x30 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x02 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x6f },
+	{ 0x22, 0xed },
+	{ 0x23, 0x25 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x6f },
+	{ 0x26, 0xed },
+	{ 0x27, 0x26 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x30 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x02 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x30 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x02 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x6f },
+	{ 0x32, 0xf1 },
+	{ 0x33, 0x6b },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x6f },
+	{ 0x36, 0xf1 },
+	{ 0x37, 0x6c },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x30 },
+	{ 0x3a, 0x04 },
+	{ 0x3b, 0x02 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x30 },
+	{ 0x3e, 0x04 },
+	{ 0x3f, 0x02 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x6f },
+	{ 0x42, 0xf1 },
+	{ 0x43, 0x6d },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x6f },
+	{ 0x46, 0xf1 },
+	{ 0x47, 0x6e },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x30 },
+	{ 0x4a, 0x04 },
+	{ 0x4b, 0x02 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x30 },
+	{ 0x4e, 0x04 },
+	{ 0x4f, 0x02 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x6f },
+	{ 0x52, 0xf1 },
+	{ 0x53, 0x6f },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x6f },
+	{ 0x56, 0xf1 },
+	{ 0x57, 0x70 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x30 },
+	{ 0x5a, 0x04 },
+	{ 0x5b, 0x02 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x30 },
+	{ 0x5e, 0x04 },
+	{ 0x5f, 0x02 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x6f },
+	{ 0x62, 0xf1 },
+	{ 0x63, 0x71 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x6f },
+	{ 0x66, 0xf1 },
+	{ 0x67, 0x72 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x30 },
+	{ 0x6a, 0x04 },
+	{ 0x6b, 0x02 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x30 },
+	{ 0x6e, 0x04 },
+	{ 0x6f, 0x02 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x60 },
+	{ 0x72, 0x11 },
+	{ 0x73, 0x0e },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x60 },
+	{ 0x76, 0x11 },
+	{ 0x77, 0x0f },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x30 },
+	{ 0x7a, 0x48 },
+	{ 0x7b, 0x02 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x30 },
+	{ 0x7e, 0x4c },
+	{ 0x7f, 0x02 },
+	/*Page 169 (0xA9) Dump*/
+	{ 0x00, 0xa9 },
+	{ 0x08, 0x01 },
+	{ 0x09, 0x10 },
+	{ 0x0a, 0x03 },
+	{ 0x0b, 0xff },
+	{ 0x0c, 0x01 },
+	{ 0x0d, 0x15 },
+	{ 0x0e, 0xb8 },
+	{ 0x0f, 0xbc },
+	/* Page 0 (0x00) Dump*/
+	{ 0x00, 0x00 },
+	{ 0x03, 0x00 },
+	{ 0x04, 0x01 },
+	{ 0x05, 0x01 },
+	{ 0x06, 0x00 },
+	{ 0x07, 0x00 },
+	{ 0x08, 0x20 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x01 },
+	{ 0x0c, 0x7c },
+	{ 0x0d, 0x10 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x10 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x10 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x01 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x80 },
+	{ 0x1b, 0x01 },
+	{ 0x1c, 0x7f },
+	{ 0x1d, 0x03 },
+	{ 0x1e, 0x01 },
+	{ 0x1f, 0x04 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x01 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x18 },
+	{ 0x26, 0xf3 },
+	{ 0x27, 0x04 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x11 },
+	{ 0x2b, 0x1f },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x30 },
+	{ 0x3e, 0x30 },
+	{ 0x3f, 0x22 },
+	{ 0x40, 0x02 },
+	{ 0x41, 0x04 },
+	{ 0x42, 0x14 },
+	{ 0x43, 0x05 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x55 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x07 },
+	{ 0x53, 0x07 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x07 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x81 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x36 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x40 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x01 },
+	{ 0x61, 0x10 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x01 },
+	{ 0x66, 0x0f },
+	{ 0x67, 0x03 },
+	{ 0x68, 0x07 },
+	{ 0x69, 0x10 },
+	{ 0x6a, 0xd0 },
+	{ 0x6b, 0x10 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x05 },
+	{ 0x70, 0x01 },
+	{ 0x71, 0x01 },
+	{ 0x72, 0x03 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x04 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x88 },
+	{ 0x77, 0x01 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/*Page 1 (0x01) Dump*/
+	{ 0x00, 0x01 },
+	{ 0x01, 0x00 },
+	{ 0x02, 0x00 },
+	{ 0x03, 0x00 },
+	{ 0x04, 0x03 },
+	{ 0x05, 0x00 },
+	{ 0x06, 0x01 },
+	{ 0x07, 0x00 },
+	{ 0x08, 0x10 },
+	{ 0x09, 0x01 },
+	{ 0x0a, 0x33 },
+	{ 0x0b, 0x11 },
+	{ 0x0c, 0x11 },
+	{ 0x0d, 0x11 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x01 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	/* Select Page 0 */
+	{ 0x00, 0x00 },
+	/* DSP Program = miniDSP */
+	{ 0x2b, 0x1f },
+	/* Select Page 44*/
+	{ 0x00, 0x2c },
+	/* Disable miniDSP_D Adaptive Mode */
+	{ 0x01, 0x00 },
+	/* Enable miniDSP_D Adaptive Mode */
+	{ 0x01, 0x04 },
+	/* Select Page 0 */
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	/* change channel */
+	{ 0x2a, 0x22 },
+	/* Wake from Standby */
+	{ 0x02, 0x00 },
+};
+
+static const unsigned char volume_table[][12] = {
+{0x2C, 0x7F, 0xB2, 0x60, 0x00, 0x2C, 0x05, 0x2C, 0x7F, 0xB2, 0x60, 0x00},
+{0x2C, 0x78, 0x8D, 0xB4, 0x00, 0x2C, 0x05, 0x2C, 0x78, 0x8D, 0xB4, 0x00},
+{0x2C, 0x71, 0xCF, 0x54, 0x00, 0x2C, 0x05, 0x2C, 0x71, 0xCF, 0x54, 0x00},
+{0x2C, 0x6B, 0x71, 0x86, 0x00, 0x2C, 0x05, 0x2C, 0x6B, 0x71, 0x86, 0x00},
+{0x2C, 0x65, 0x6E, 0xE3, 0x00, 0x2C, 0x05, 0x2C, 0x65, 0x6E, 0xE3, 0x00},
+{0x2C, 0x5F, 0xC2, 0x53, 0x00, 0x2C, 0x05, 0x2C, 0x5F, 0xC2, 0x53, 0x00},
+{0x2C, 0x5A, 0x67, 0x03, 0x00, 0x2C, 0x05, 0x2C, 0x5A, 0x67, 0x03, 0x00},
+{0x2C, 0x55, 0x58, 0x6A, 0x00, 0x2C, 0x05, 0x2C, 0x55, 0x58, 0x6A, 0x00},
+{0x2C, 0x50, 0x92, 0x3B, 0x00, 0x2C, 0x05, 0x2C, 0x50, 0x92, 0x3B, 0x00},
+{0x2C, 0x4C, 0x10, 0x6B, 0x00, 0x2C, 0x05, 0x2C, 0x4C, 0x10, 0x6B, 0x00},
+{0x2C, 0x47, 0xCF, 0x26, 0x00, 0x2C, 0x05, 0x2C, 0x47, 0xCF, 0x26, 0x00},
+{0x2C, 0x43, 0xCA, 0xD0, 0x00, 0x2C, 0x05, 0x2C, 0x43, 0xCA, 0xD0, 0x00},
+{0x2C, 0x40, 0x00, 0x00, 0x00, 0x2C, 0x05, 0x2C, 0x40, 0x00, 0x00, 0x00},
+{0x2C, 0x3C, 0x6B, 0x7E, 0x00, 0x2C, 0x05, 0x2C, 0x3C, 0x6B, 0x7E, 0x00},
+{0x2C, 0x39, 0x0A, 0x41, 0x00, 0x2C, 0x05, 0x2C, 0x39, 0x0A, 0x41, 0x00},
+{0x2C, 0x35, 0xD9, 0x6B, 0x00, 0x2C, 0x05, 0x2C, 0x35, 0xD9, 0x6B, 0x00},
+{0x2C, 0x32, 0xD6, 0x46, 0x00, 0x2C, 0x05, 0x2C, 0x32, 0xD6, 0x46, 0x00},
+{0x2C, 0x2F, 0xFE, 0x44, 0x00, 0x2C, 0x05, 0x2C, 0x2F, 0xFE, 0x44, 0x00},
+{0x2C, 0x2D, 0x4E, 0xFB, 0x00, 0x2C, 0x05, 0x2C, 0x2D, 0x4E, 0xFB, 0x00},
+{0x2C, 0x2A, 0xC6, 0x25, 0x00, 0x2C, 0x05, 0x2C, 0x2A, 0xC6, 0x25, 0x00},
+{0x2C, 0x28, 0x61, 0x9A, 0x00, 0x2C, 0x05, 0x2C, 0x28, 0x61, 0x9A, 0x00},
+{0x2C, 0x26, 0x1F, 0x54, 0x00, 0x2C, 0x05, 0x2C, 0x26, 0x1F, 0x54, 0x00},
+{0x2C, 0x23, 0xFD, 0x66, 0x00, 0x2C, 0x05, 0x2C, 0x23, 0xFD, 0x66, 0x00},
+{0x2C, 0x21, 0xFA, 0x02, 0x00, 0x2C, 0x05, 0x2C, 0x21, 0xFA, 0x02, 0x00},
+{0x2C, 0x20, 0x13, 0x73, 0x00, 0x2C, 0x05, 0x2C, 0x20, 0x13, 0x73, 0x00},
+{0x2C, 0x1E, 0x48, 0x1C, 0x00, 0x2C, 0x05, 0x2C, 0x1E, 0x48, 0x1C, 0x00},
+{0x2C, 0x1C, 0x96, 0x76, 0x00, 0x2C, 0x05, 0x2C, 0x1C, 0x96, 0x76, 0x00},
+{0x2C, 0x1A, 0xFD, 0x13, 0x00, 0x2C, 0x05, 0x2C, 0x1A, 0xFD, 0x13, 0x00},
+{0x2C, 0x19, 0x7A, 0x96, 0x00, 0x2C, 0x05, 0x2C, 0x19, 0x7A, 0x96, 0x00},
+{0x2C, 0x18, 0x0D, 0xB8, 0x00, 0x2C, 0x05, 0x2C, 0x18, 0x0D, 0xB8, 0x00},
+{0x2C, 0x16, 0xB5, 0x43, 0x00, 0x2C, 0x05, 0x2C, 0x16, 0xB5, 0x43, 0x00},
+{0x2C, 0x15, 0x70, 0x12, 0x00, 0x2C, 0x05, 0x2C, 0x15, 0x70, 0x12, 0x00},
+{0x2C, 0x14, 0x3D, 0x13, 0x00, 0x2C, 0x05, 0x2C, 0x14, 0x3D, 0x13, 0x00},
+{0x2C, 0x13, 0x1B, 0x40, 0x00, 0x2C, 0x05, 0x2C, 0x13, 0x1B, 0x40, 0x00},
+{0x2C, 0x12, 0x09, 0xA3, 0x00, 0x2C, 0x05, 0x2C, 0x12, 0x09, 0xA3, 0x00},
+{0x2C, 0x11, 0x07, 0x54, 0x00, 0x2C, 0x05, 0x2C, 0x11, 0x07, 0x54, 0x00},
+{0x2C, 0x10, 0x13, 0x79, 0x00, 0x2C, 0x05, 0x2C, 0x10, 0x13, 0x79, 0x00},
+{0x2C, 0x0F, 0x2D, 0x42, 0x00, 0x2C, 0x05, 0x2C, 0x0F, 0x2D, 0x42, 0x00},
+{0x2C, 0x0E, 0x53, 0xEB, 0x00, 0x2C, 0x05, 0x2C, 0x0E, 0x53, 0xEB, 0x00},
+{0x2C, 0x0D, 0x86, 0xBD, 0x00, 0x2C, 0x05, 0x2C, 0x0D, 0x86, 0xBD, 0x00},
+{0x2C, 0x0C, 0xC5, 0x09, 0x00, 0x2C, 0x05, 0x2C, 0x0C, 0xC5, 0x09, 0x00},
+{0x2C, 0x0C, 0x0E, 0x2B, 0x00, 0x2C, 0x05, 0x2C, 0x0C, 0x0E, 0x2B, 0x00},
+{0x2C, 0x0B, 0x61, 0x88, 0x00, 0x2C, 0x05, 0x2C, 0x0B, 0x61, 0x88, 0x00},
+{0x2C, 0x0A, 0xBE, 0x8D, 0x00, 0x2C, 0x05, 0x2C, 0x0A, 0xBE, 0x8D, 0x00},
+{0x2C, 0x0A, 0x24, 0xB0, 0x00, 0x2C, 0x05, 0x2C, 0x0A, 0x24, 0xB0, 0x00},
+{0x2C, 0x09, 0x93, 0x6E, 0x00, 0x2C, 0x05, 0x2C, 0x09, 0x93, 0x6E, 0x00},
+{0x2C, 0x09, 0x0A, 0x4D, 0x00, 0x2C, 0x05, 0x2C, 0x09, 0x0A, 0x4D, 0x00},
+{0x2C, 0x08, 0x88, 0xD7, 0x00, 0x2C, 0x05, 0x2C, 0x08, 0x88, 0xD7, 0x00},
+{0x2C, 0x08, 0x0E, 0x9F, 0x00, 0x2C, 0x05, 0x2C, 0x08, 0x0E, 0x9F, 0x00},
+{0x2C, 0x07, 0x9B, 0x3D, 0x00, 0x2C, 0x05, 0x2C, 0x07, 0x9B, 0x3D, 0x00},
+{0x2C, 0x07, 0x2E, 0x50, 0x00, 0x2C, 0x05, 0x2C, 0x07, 0x2E, 0x50, 0x00},
+{0x2C, 0x06, 0xC7, 0x7B, 0x00, 0x2C, 0x05, 0x2C, 0x06, 0xC7, 0x7B, 0x00},
+{0x2C, 0x06, 0x66, 0x66, 0x00, 0x2C, 0x05, 0x2C, 0x06, 0x66, 0x66, 0x00},
+{0x2C, 0x06, 0x0A, 0xBF, 0x00, 0x2C, 0x05, 0x2C, 0x06, 0x0A, 0xBF, 0x00},
+{0x2C, 0x05, 0xB4, 0x39, 0x00, 0x2C, 0x05, 0x2C, 0x05, 0xB4, 0x39, 0x00},
+{0x2C, 0x05, 0x62, 0x8A, 0x00, 0x2C, 0x05, 0x2C, 0x05, 0x62, 0x8A, 0x00},
+{0x2C, 0x05, 0x15, 0x6D, 0x00, 0x2C, 0x05, 0x2C, 0x05, 0x15, 0x6D, 0x00},
+{0x2C, 0x04, 0xCC, 0xA0, 0x00, 0x2C, 0x05, 0x2C, 0x04, 0xCC, 0xA0, 0x00},
+{0x2C, 0x04, 0x87, 0xE5, 0x00, 0x2C, 0x05, 0x2C, 0x04, 0x87, 0xE5, 0x00},
+{0x2C, 0x04, 0x47, 0x03, 0x00, 0x2C, 0x05, 0x2C, 0x04, 0x47, 0x03, 0x00},
+{0x2C, 0x04, 0x09, 0xC2, 0x00, 0x2C, 0x05, 0x2C, 0x04, 0x09, 0xC2, 0x00},
+{0x2C, 0x03, 0xCF, 0xEE, 0x00, 0x2C, 0x05, 0x2C, 0x03, 0xCF, 0xEE, 0x00},
+{0x2C, 0x03, 0x99, 0x57, 0x00, 0x2C, 0x05, 0x2C, 0x03, 0x99, 0x57, 0x00},
+{0x2C, 0x03, 0x65, 0xCD, 0x00, 0x2C, 0x05, 0x2C, 0x03, 0x65, 0xCD, 0x00},
+{0x2C, 0x03, 0x35, 0x25, 0x00, 0x2C, 0x05, 0x2C, 0x03, 0x35, 0x25, 0x00},
+{0x2C, 0x03, 0x07, 0x36, 0x00, 0x2C, 0x05, 0x2C, 0x03, 0x07, 0x36, 0x00},
+{0x2C, 0x02, 0xDB, 0xD8, 0x00, 0x2C, 0x05, 0x2C, 0x02, 0xDB, 0xD8, 0x00},
+{0x2C, 0x02, 0xB2, 0xE8, 0x00, 0x2C, 0x05, 0x2C, 0x02, 0xB2, 0xE8, 0x00},
+{0x2C, 0x02, 0x8C, 0x42, 0x00, 0x2C, 0x05, 0x2C, 0x02, 0x8C, 0x42, 0x00},
+{0x2C, 0x02, 0x67, 0xC5, 0x00, 0x2C, 0x05, 0x2C, 0x02, 0x67, 0xC5, 0x00},
+{0x2C, 0x02, 0x45, 0x53, 0x00, 0x2C, 0x05, 0x2C, 0x02, 0x45, 0x53, 0x00},
+{0x2C, 0x02, 0x24, 0xCE, 0x00, 0x2C, 0x05, 0x2C, 0x02, 0x24, 0xCE, 0x00},
+{0x2C, 0x02, 0x06, 0x1B, 0x00, 0x2C, 0x05, 0x2C, 0x02, 0x06, 0x1B, 0x00},
+{0x2C, 0x01, 0xE9, 0x20, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0xE9, 0x20, 0x00},
+{0x2C, 0x01, 0xCD, 0xC3, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0xCD, 0xC3, 0x00},
+{0x2C, 0x01, 0xB3, 0xEE, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0xB3, 0xEE, 0x00},
+{0x2C, 0x01, 0x9B, 0x8C, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x9B, 0x8C, 0x00},
+{0x2C, 0x01, 0x84, 0x86, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x84, 0x86, 0x00},
+{0x2C, 0x01, 0x6E, 0xCA, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x6E, 0xCA, 0x00},
+{0x2C, 0x01, 0x5A, 0x46, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x5A, 0x46, 0x00},
+{0x2C, 0x01, 0x46, 0xE7, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x46, 0xE7, 0x00},
+{0x2C, 0x01, 0x34, 0x9D, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x34, 0x9D, 0x00},
+{0x2C, 0x01, 0x23, 0x5A, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x23, 0x5A, 0x00},
+{0x2C, 0x01, 0x13, 0x0E, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x13, 0x0E, 0x00},
+{0x2C, 0x01, 0x03, 0xAB, 0x00, 0x2C, 0x05, 0x2C, 0x01, 0x03, 0xAB, 0x00},
+{0x2C, 0x00, 0xF5, 0x24, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xF5, 0x24, 0x00},
+{0x2C, 0x00, 0xE7, 0x6E, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xE7, 0x6E, 0x00},
+{0x2C, 0x00, 0xDA, 0x7B, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xDA, 0x7B, 0x00},
+{0x2C, 0x00, 0xCE, 0x43, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xCE, 0x43, 0x00},
+{0x2C, 0x00, 0xC2, 0xB9, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xC2, 0xB9, 0x00},
+{0x2C, 0x00, 0xB7, 0xD4, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xB7, 0xD4, 0x00},
+{0x2C, 0x00, 0xAD, 0x8C, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xAD, 0x8C, 0x00},
+{0x2C, 0x00, 0xA3, 0xD7, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0xA3, 0xD7, 0x00},
+{0x2C, 0x00, 0x9A, 0xAC, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x9A, 0xAC, 0x00},
+{0x2C, 0x00, 0x92, 0x05, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x92, 0x05, 0x00},
+{0x2C, 0x00, 0x89, 0xDA, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x89, 0xDA, 0x00},
+{0x2C, 0x00, 0x82, 0x24, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x82, 0x24, 0x00},
+{0x2C, 0x00, 0x7A, 0xDC, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x7A, 0xDC, 0x00},
+{0x2C, 0x00, 0x73, 0xFD, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x73, 0xFD, 0x00},
+{0x2C, 0x00, 0x6D, 0x80, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x6D, 0x80, 0x00},
+{0x2C, 0x00, 0x67, 0x60, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x67, 0x60, 0x00},
+{0x2C, 0x00, 0x61, 0x97, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x61, 0x97, 0x00},
+{0x2C, 0x00, 0x5C, 0x22, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x5C, 0x22, 0x00},
+{0x2C, 0x00, 0x56, 0xFA, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x56, 0xFA, 0x00},
+{0x2C, 0x00, 0x52, 0x1D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x52, 0x1D, 0x00},
+{0x2C, 0x00, 0x4D, 0x85, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x4D, 0x85, 0x00},
+{0x2C, 0x00, 0x49, 0x2F, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x49, 0x2F, 0x00},
+{0x2C, 0x00, 0x45, 0x17, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x45, 0x17, 0x00},
+{0x2C, 0x00, 0x41, 0x39, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x41, 0x39, 0x00},
+{0x2C, 0x00, 0x3D, 0x93, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x3D, 0x93, 0x00},
+{0x2C, 0x00, 0x3A, 0x21, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x3A, 0x21, 0x00},
+{0x2C, 0x00, 0x36, 0xE1, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x36, 0xE1, 0x00},
+{0x2C, 0x00, 0x33, 0xCF, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x33, 0xCF, 0x00},
+{0x2C, 0x00, 0x30, 0xE9, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x30, 0xE9, 0x00},
+{0x2C, 0x00, 0x2E, 0x2D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x2E, 0x2D, 0x00},
+{0x2C, 0x00, 0x2B, 0x97, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x2B, 0x97, 0x00},
+{0x2C, 0x00, 0x29, 0x27, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x29, 0x27, 0x00},
+{0x2C, 0x00, 0x26, 0xDA, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x26, 0xDA, 0x00},
+{0x2C, 0x00, 0x24, 0xAD, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x24, 0xAD, 0x00},
+{0x2C, 0x00, 0x22, 0xA0, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x22, 0xA0, 0x00},
+{0x2C, 0x00, 0x20, 0xB0, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x20, 0xB0, 0x00},
+{0x2C, 0x00, 0x1E, 0xDC, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x1E, 0xDC, 0x00},
+{0x2C, 0x00, 0x1D, 0x22, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x1D, 0x22, 0x00},
+{0x2C, 0x00, 0x1B, 0x81, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x1B, 0x81, 0x00},
+{0x2C, 0x00, 0x19, 0xF7, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x19, 0xF7, 0x00},
+{0x2C, 0x00, 0x18, 0x83, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x18, 0x83, 0x00},
+{0x2C, 0x00, 0x17, 0x24, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x17, 0x24, 0x00},
+{0x2C, 0x00, 0x15, 0xD9, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x15, 0xD9, 0x00},
+{0x2C, 0x00, 0x14, 0xA0, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x14, 0xA0, 0x00},
+{0x2C, 0x00, 0x13, 0x78, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x13, 0x78, 0x00},
+{0x2C, 0x00, 0x12, 0x62, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x12, 0x62, 0x00},
+{0x2C, 0x00, 0x11, 0x5A, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x11, 0x5A, 0x00},
+{0x2C, 0x00, 0x10, 0x62, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x10, 0x62, 0x00},
+{0x2C, 0x00, 0x0F, 0x77, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0F, 0x77, 0x00},
+{0x2C, 0x00, 0x0E, 0x9A, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0E, 0x9A, 0x00},
+{0x2C, 0x00, 0x0D, 0xC9, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0D, 0xC9, 0x00},
+{0x2C, 0x00, 0x0D, 0x03, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0D, 0x03, 0x00},
+{0x2C, 0x00, 0x0C, 0x49, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0C, 0x49, 0x00},
+{0x2C, 0x00, 0x0B, 0x99, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0B, 0x99, 0x00},
+{0x2C, 0x00, 0x0A, 0xF3, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0A, 0xF3, 0x00},
+{0x2C, 0x00, 0x0A, 0x56, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x0A, 0x56, 0x00},
+{0x2C, 0x00, 0x09, 0xC2, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x09, 0xC2, 0x00},
+{0x2C, 0x00, 0x09, 0x36, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x09, 0x36, 0x00},
+{0x2C, 0x00, 0x08, 0xB2, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x08, 0xB2, 0x00},
+{0x2C, 0x00, 0x08, 0x36, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x08, 0x36, 0x00},
+{0x2C, 0x00, 0x07, 0xC0, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x07, 0xC0, 0x00},
+{0x2C, 0x00, 0x07, 0x51, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x07, 0x51, 0x00},
+{0x2C, 0x00, 0x06, 0xE8, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x06, 0xE8, 0x00},
+{0x2C, 0x00, 0x06, 0x85, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x06, 0x85, 0x00},
+{0x2C, 0x00, 0x06, 0x28, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x06, 0x28, 0x00},
+{0x2C, 0x00, 0x05, 0xD0, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x05, 0xD0, 0x00},
+{0x2C, 0x00, 0x05, 0x7C, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x05, 0x7C, 0x00},
+{0x2C, 0x00, 0x05, 0x2E, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x05, 0x2E, 0x00},
+{0x2C, 0x00, 0x04, 0xE4, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x04, 0xE4, 0x00},
+{0x2C, 0x00, 0x04, 0x9E, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x04, 0x9E, 0x00},
+{0x2C, 0x00, 0x04, 0x5B, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x04, 0x5B, 0x00},
+{0x2C, 0x00, 0x04, 0x1D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x04, 0x1D, 0x00},
+{0x2C, 0x00, 0x03, 0xE2, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x03, 0xE2, 0x00},
+{0x2C, 0x00, 0x03, 0xAA, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x03, 0xAA, 0x00},
+{0x2C, 0x00, 0x03, 0x76, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x03, 0x76, 0x00},
+{0x2C, 0x00, 0x03, 0x44, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x03, 0x44, 0x00},
+{0x2C, 0x00, 0x03, 0x16, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x03, 0x16, 0x00},
+{0x2C, 0x00, 0x02, 0xE9, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x02, 0xE9, 0x00},
+{0x2C, 0x00, 0x02, 0xC0, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x02, 0xC0, 0x00},
+{0x2C, 0x00, 0x02, 0x98, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x02, 0x98, 0x00},
+{0x2C, 0x00, 0x02, 0x73, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x02, 0x73, 0x00},
+{0x2C, 0x00, 0x02, 0x50, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x02, 0x50, 0x00},
+{0x2C, 0x00, 0x02, 0x2F, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x02, 0x2F, 0x00},
+{0x2C, 0x00, 0x02, 0x10, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x02, 0x10, 0x00},
+{0x2C, 0x00, 0x01, 0xF2, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0xF2, 0x00},
+{0x2C, 0x00, 0x01, 0xD6, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0xD6, 0x00},
+{0x2C, 0x00, 0x01, 0xBC, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0xBC, 0x00},
+{0x2C, 0x00, 0x01, 0xA3, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0xA3, 0x00},
+{0x2C, 0x00, 0x01, 0x8B, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x8B, 0x00},
+{0x2C, 0x00, 0x01, 0x75, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x75, 0x00},
+{0x2C, 0x00, 0x01, 0x60, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x60, 0x00},
+{0x2C, 0x00, 0x01, 0x4D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x4D, 0x00},
+{0x2C, 0x00, 0x01, 0x3A, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x3A, 0x00},
+{0x2C, 0x00, 0x01, 0x28, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x28, 0x00},
+{0x2C, 0x00, 0x01, 0x18, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x18, 0x00},
+{0x2C, 0x00, 0x01, 0x08, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x01, 0x08, 0x00},
+{0x2C, 0x00, 0x00, 0xF9, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xF9, 0x00},
+{0x2C, 0x00, 0x00, 0xEB, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xEB, 0x00},
+{0x2C, 0x00, 0x00, 0xDE, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xDE, 0x00},
+{0x2C, 0x00, 0x00, 0xD2, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xD2, 0x00},
+{0x2C, 0x00, 0x00, 0xC6, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xC6, 0x00},
+{0x2C, 0x00, 0x00, 0xBB, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xBB, 0x00},
+{0x2C, 0x00, 0x00, 0xB0, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xB0, 0x00},
+{0x2C, 0x00, 0x00, 0xA6, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0xA6, 0x00},
+{0x2C, 0x00, 0x00, 0x9D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x9D, 0x00},
+{0x2C, 0x00, 0x00, 0x94, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x94, 0x00},
+{0x2C, 0x00, 0x00, 0x8C, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x8C, 0x00},
+{0x2C, 0x00, 0x00, 0x84, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x84, 0x00},
+{0x2C, 0x00, 0x00, 0x7D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x7D, 0x00},
+{0x2C, 0x00, 0x00, 0x76, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x76, 0x00},
+{0x2C, 0x00, 0x00, 0x6F, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x6F, 0x00},
+{0x2C, 0x00, 0x00, 0x69, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x69, 0x00},
+{0x2C, 0x00, 0x00, 0x63, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x63, 0x00},
+{0x2C, 0x00, 0x00, 0x5D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x5D, 0x00},
+{0x2C, 0x00, 0x00, 0x58, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x58, 0x00},
+{0x2C, 0x00, 0x00, 0x53, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x53, 0x00},
+{0x2C, 0x00, 0x00, 0x4F, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x4F, 0x00},
+{0x2C, 0x00, 0x00, 0x4A, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x4A, 0x00},
+{0x2C, 0x00, 0x00, 0x46, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x46, 0x00},
+{0x2C, 0x00, 0x00, 0x42, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x42, 0x00},
+{0x2C, 0x00, 0x00, 0x3E, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x3E, 0x00},
+{0x2C, 0x00, 0x00, 0x3B, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x3B, 0x00},
+{0x2C, 0x00, 0x00, 0x37, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x37, 0x00},
+{0x2C, 0x00, 0x00, 0x34, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x34, 0x00},
+{0x2C, 0x00, 0x00, 0x31, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x31, 0x00},
+{0x2C, 0x00, 0x00, 0x2F, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x2F, 0x00},
+{0x2C, 0x00, 0x00, 0x2C, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x2C, 0x00},
+{0x2C, 0x00, 0x00, 0x29, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x29, 0x00},
+{0x2C, 0x00, 0x00, 0x27, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x27, 0x00},
+{0x2C, 0x00, 0x00, 0x25, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x25, 0x00},
+{0x2C, 0x00, 0x00, 0x23, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x23, 0x00},
+{0x2C, 0x00, 0x00, 0x21, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x21, 0x00},
+{0x2C, 0x00, 0x00, 0x1F, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x1F, 0x00},
+{0x2C, 0x00, 0x00, 0x1D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x1D, 0x00},
+{0x2C, 0x00, 0x00, 0x1C, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x1C, 0x00},
+{0x2C, 0x00, 0x00, 0x1A, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x1A, 0x00},
+{0x2C, 0x00, 0x00, 0x18, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x18, 0x00},
+{0x2C, 0x00, 0x00, 0x17, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x17, 0x00},
+{0x2C, 0x00, 0x00, 0x16, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x16, 0x00},
+{0x2C, 0x00, 0x00, 0x15, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x15, 0x00},
+{0x2C, 0x00, 0x00, 0x13, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x13, 0x00},
+{0x2C, 0x00, 0x00, 0x12, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x12, 0x00},
+{0x2C, 0x00, 0x00, 0x11, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x11, 0x00},
+{0x2C, 0x00, 0x00, 0x10, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x10, 0x00},
+{0x2C, 0x00, 0x00, 0x0F, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x0F, 0x00},
+{0x2C, 0x00, 0x00, 0x0E, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x0E, 0x00},
+{0x2C, 0x00, 0x00, 0x0E, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x0E, 0x00},
+{0x2C, 0x00, 0x00, 0x0D, 0x00, 0x2C, 0x05, 0x2C, 0x00, 0x00, 0x0D, 0x00},
+};
+
+static const unsigned char dsp_front_volume_table[][12] = {
+{0x33, 0x20, 0x00, 0x00, 0x00, 0x2c, 0x05, 0x33, 0x20, 0x00, 0x00, 0x00},
+{0x33, 0x23, 0xe7, 0x93, 0x00, 0x2c, 0x05, 0x33, 0x23, 0xe7, 0x93, 0x00},
+{0x33, 0x28, 0x49, 0x1d, 0x00, 0x2c, 0x05, 0x33, 0x28, 0x49, 0x1d, 0x00},
+{0x33, 0x2d, 0x33, 0x81, 0x00, 0x2c, 0x05, 0x33, 0x2d, 0x33, 0x81, 0x00},
+{0x33, 0x32, 0xb7, 0x71, 0x00, 0x2c, 0x05, 0x33, 0x32, 0xb7, 0x71, 0x00},
+{0x33, 0x38, 0xe7, 0xaa, 0x00, 0x2c, 0x05, 0x33, 0x38, 0xe7, 0xaa, 0x00},
+{0x33, 0x3f, 0xd9, 0x30, 0x00, 0x2c, 0x05, 0x33, 0x3f, 0xd9, 0x30, 0x00},
+{0x33, 0x47, 0xa3, 0x9a, 0x00, 0x2c, 0x05, 0x33, 0x47, 0xa3, 0x9a, 0x00},
+{0x33, 0x50, 0x61, 0x5f, 0x00, 0x2c, 0x05, 0x33, 0x50, 0x61, 0x5f, 0x00},
+{0x33, 0x5a, 0x30, 0x31, 0x00, 0x2c, 0x05, 0x33, 0x5a, 0x30, 0x31, 0x00},
+{0x33, 0x65, 0x31, 0x60, 0x00, 0x2c, 0x05, 0x33, 0x65, 0x31, 0x60, 0x00},
+{0x33, 0x71, 0x8a, 0x50, 0x00, 0x2c, 0x05, 0x33, 0x71, 0x8a, 0x50, 0x00},
+{0x33, 0x7f, 0x64, 0xf0, 0x00, 0x2c, 0x05, 0x33, 0x7f, 0x64, 0xf0, 0x00},
+};
+
+/* codec private data */
+struct tas5766_priv {
+	struct snd_soc_codec *codec;
+	struct tas57xx_platform_data *pdata;
+	struct regmap *regmap;
+
+	void *control_data;
+
+	/*Platform provided EQ configuration */
+	int num_eq_conf_texts;
+	const char **eq_conf_texts;
+	int eq_cfg;
+	struct soc_enum eq_conf_enum;
+	unsigned char Ch1_vol;
+	unsigned char Ch2_vol;
+	unsigned char master_vol;
+	unsigned int mclk;
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	struct early_suspend early_suspend;
+#endif
+};
+
+static int tas5766_write_page0_reg(struct snd_soc_codec *codec,
+	unsigned char reg, unsigned char val)
+{
+	int ret = 0;
+
+	ret |= snd_soc_write(codec, TAS5766_PAGE_SELECT, 0);
+	ret |= snd_soc_write(codec, reg, val);
+
+	return ret;
+}
+
+static int tas5766_set_vol_reg(struct snd_soc_codec *codec, int volume)
+{
+	int ret = 0;
+
+	ret |= snd_soc_write(codec, TAS5766_PAGE_SELECT,
+		volume_table[volume][0]);
+	ret |= snd_soc_write(codec, TAS5766_GPIO_MUTE_CTRL,
+		volume_table[volume][1]);
+	ret |= snd_soc_write(codec, TAS5766_CLK_CONFIG,
+		volume_table[volume][2]);
+	ret |= snd_soc_write(codec, TAS5766_DSP_GPIO_INPUT,
+		volume_table[volume][3]);
+	ret |= snd_soc_write(codec, 0x0b, volume_table[volume][4]);
+
+	ret |= snd_soc_write(codec, TAS5766_PAGE_SELECT,
+		volume_table[volume][5]);
+	ret |= snd_soc_write(codec, TAS5766_ANALOG_CONTROL,
+		volume_table[volume][6]);
+	mdelay(10);
+
+	ret |= snd_soc_write(codec, TAS5766_PAGE_SELECT,
+		volume_table[volume][7]);
+	ret |= snd_soc_write(codec, TAS5766_GPIO_MUTE_CTRL,
+		volume_table[volume][8]);
+	ret |= snd_soc_write(codec, TAS5766_CLK_CONFIG,
+		volume_table[volume][9]);
+	ret |= snd_soc_write(codec, TAS5766_DSP_GPIO_INPUT,
+		volume_table[volume][10]);
+	ret |= snd_soc_write(codec, 0x0b, volume_table[volume][11]);
+
+	return ret;
+}
+
+static int tas5766_set_dsp_front_vol_reg(
+	struct snd_soc_codec *codec, int volume)
+{
+	int ret = 0;
+
+	pr_info("%s front_vol=%d\n", __func__, volume);
+	ret |= snd_soc_write(codec, TAS5766_PAGE_SELECT,
+		dsp_front_volume_table[volume][0]);
+	ret |= snd_soc_write(codec, 0x50, dsp_front_volume_table[volume][1]);
+	ret |= snd_soc_write(codec, 0x51, dsp_front_volume_table[volume][2]);
+	ret |= snd_soc_write(codec, 0x52, dsp_front_volume_table[volume][3]);
+	ret |= snd_soc_write(codec, 0x53, dsp_front_volume_table[volume][4]);
+	ret |= snd_soc_write(codec, TAS5766_PAGE_SELECT,
+		dsp_front_volume_table[volume][5]);
+	ret |= snd_soc_write(codec, TAS5766_ANALOG_CONTROL,
+		dsp_front_volume_table[volume][6]);
+	ret |= snd_soc_write(codec, TAS5766_PAGE_SELECT,
+		dsp_front_volume_table[volume][7]);
+	ret |= snd_soc_write(codec, 0x50, dsp_front_volume_table[volume][8]);
+	ret |= snd_soc_write(codec, 0x51, dsp_front_volume_table[volume][9]);
+	ret |= snd_soc_write(codec, 0x52, dsp_front_volume_table[volume][10]);
+	ret |= snd_soc_write(codec, 0x53, dsp_front_volume_table[volume][11]);
+	return ret;
+}
+
+static int tas5766_set_channel_vol(struct snd_soc_codec *codec,
+	unsigned char L_volume, unsigned char R_volume)
+{
+	int ret = 0;
+
+	if (L_volume >= 0 && L_volume <= 232) {
+		ret = tas5766_set_vol_reg(codec, 0xe8 - L_volume);
+		if (ret < 0)
+			pr_info("%s failed!\n", __func__);
+	}
+	return ret;
+}
+
+static int tas5766_set_master_vol(
+	struct snd_soc_codec *codec, unsigned char volume)
+{
+	int ret = 0;
+
+	tas5766_set_channel_vol(codec, volume, volume);
+	ret = tas5766_write_page0_reg(codec, TAS5766_MUTE, 0);
+
+	return ret;
+}
+
+static int aml_master_vol_set_enum_4c(
+	struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = g_tas5766_codec[0];
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	tas5766->master_vol = ucontrol->value.enumerated.item[0];
+	tas5766_set_master_vol(codec, tas5766->master_vol);
+
+	return 0;
+}
+
+static int aml_master_vol_get_enum_4c(
+	struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol)
+{
+	//struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
+	//struct i2c_client *i2c = to_i2c_client(codec->dev);
+	//i2c->addr = 0x19;
+
+	struct snd_soc_codec *codec = g_tas5766_codec[0];
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	ucontrol->value.enumerated.item[0] = tas5766->master_vol;
+	return 0;
+}
+
+static int aml_master_vol_set_enum_4d(
+	struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = g_tas5766_codec[1];
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	tas5766->master_vol = ucontrol->value.enumerated.item[0];
+	tas5766_set_master_vol(codec, tas5766->master_vol);
+
+	return 0;
+}
+
+static int aml_master_vol_get_enum_4d(
+	struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = g_tas5766_codec[1];
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	ucontrol->value.enumerated.item[0] = tas5766->master_vol;
+	return 0;
+}
+
+static int aml_master_vol_set_enum_4e(
+	struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = g_tas5766_codec[2];
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	tas5766->master_vol = ucontrol->value.enumerated.item[0];
+	tas5766_set_master_vol(codec, tas5766->master_vol);
+
+	return 0;
+}
+
+static int aml_master_vol_get_enum_4e(
+	struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = g_tas5766_codec[2];
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	ucontrol->value.enumerated.item[0] = tas5766->master_vol;
+	return 0;
+}
+
+static int tas5766_set_mute(struct snd_soc_codec *codec)
+{
+	int ret = 0;
+
+	ret = tas5766_write_page0_reg(codec, TAS5766_MUTE, 0x11);
+	return ret;
+}
+
+int tas5766_set_dac_vol(struct snd_soc_codec *codec, unsigned char volume)
+{
+	int ret = 0;
+
+	if (volume >= 0 && volume <= 12)
+		tas5766_set_dsp_front_vol_reg(codec, volume);
+	return ret;
+}
+
+static int tas5766_init_master_vol(struct snd_soc_codec *codec)
+{
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	/* using user DTS defined master vol config; */
+	pr_info("%s master_vol:%d\n", __func__, tas5766->master_vol);
+	tas5766_set_master_vol(codec, tas5766->master_vol);
+
+	return 0;
+}
+
+void sleep(int us)
+{
+	int n = us * (80 / 3);
+
+	while (n)
+		n--;
+}
+
+void Delay_ms(unsigned int ms)
+{
+	unsigned int i = 0;
+	unsigned int num = 5000; /* 1ms */
+
+	for (i = 0; i < ms; i++)
+		sleep(num);
+}
+
+
+#define CFG_META_SWITCH    255
+#define CFG_META_DELAY     254
+#define CFG_META_BURST     253
+
+static int tas5766_init(struct snd_soc_codec *codec)
+{
+	int i = 0;
+	int j = 0;
+
+	pr_info("tas5766_init enter\n");
+	while (i < ARRAY_SIZE(tas5766_reg_init)) {
+		switch (tas5766_reg_init[i][0]) {
+		case CFG_META_SWITCH:
+		break;
+		case CFG_META_DELAY:
+			Delay_ms(tas5766_reg_init[i][1]);
+		break;
+		case CFG_META_BURST:
+			for (j = 0; j < tas5766_reg_init[i][1]; j++) {
+				snd_soc_write(codec, tas5766_reg_init[i+1+j][0],
+					tas5766_reg_init[i+1+j][1]);
+			}
+			i += (tas5766_reg_init[i+j][1] + 1) / 2;
+		break;
+		default:
+			snd_soc_write(codec, tas5766_reg_init[i][0],
+				tas5766_reg_init[i][1]);
+		break;
+		}
+		i++;
+	}
+
+	mdelay(10);
+	tas5766_set_dac_vol(codec, 0x20);
+	tas5766_init_master_vol(codec);
+	tas5766_set_mute(codec);
+
+	return 0;
+}
+
+static const char *const Master_vol_texts[] = {
+"0", "1", "2", "3", "4", "5", "6", "7",
+"8", "9", "10", "11", "12", "13", "14", "15",
+"16", "17", "18", "19", "20", "21", "22", "23",
+"24", "25", "26", "27", "28", "29", "30", "31",
+"32", "33", "34", "35", "36", "37", "38", "39",
+"40", "41", "42", "43", "44", "45", "46", "47",
+"48", "49", "50", "51", "52", "53", "54", "55",
+"56", "57", "58", "59", "60", "61", "62", "63",
+"64", "65", "66", "67", "68", "69", "70", "71",
+"72", "73", "74", "75", "76", "77", "78", "79",
+"80", "81", "82", "83", "84", "85", "86", "87",
+"88", "89", "90", "91", "92", "93", "94", "95",
+"96", "97", "98", "99", "100", "101", "102",
+"103", "104", "105", "106", "107", "108", "109",
+"110", "111", "112", "113", "114", "115", "116",
+"117", "118", "119", "120", "121", "122", "123",
+"124", "125", "126", "127", "128", "129",
+"130", "131", "132", "133", "134", "135", "136",
+"137", "138", "139", "140", "141", "142", "143",
+"144", "145", "146", "147", "148", "149",
+"150", "151", "152", "153", "154", "155", "156",
+"157", "158", "159", "160", "161", "162", "163",
+"164", "165", "166", "167", "168", "169",
+"170", "171", "172", "173", "174", "175", "176",
+"177", "178", "179", "180", "181", "182", "183",
+"184", "185", "186", "187", "188", "189",
+"190", "191", "192", "193", "194", "195", "196",
+"197", "198", "199", "200", "201", "202", "203",
+"204", "205", "206", "207", "208", "209",
+"210", "211", "212", "213", "214", "215", "216",
+"217", "218", "219", "220", "221", "222", "223",
+"224", "225", "226", "227", "228", "229",
+"230", "231", "232"
+};
+
+static const struct soc_enum Master_Volume_Enum = SOC_ENUM_SINGLE(
+			SND_SOC_NOPM, 0, ARRAY_SIZE(Master_vol_texts),
+			Master_vol_texts);
+
+static const struct snd_kcontrol_new tas5766_snd_controls_4c[] = {
+	SOC_ENUM_EXT("DAC_4c Master Volume",
+			  Master_Volume_Enum,
+			   aml_master_vol_get_enum_4c,
+			   aml_master_vol_set_enum_4c),
+	SOC_SINGLE("DAC_4c Ch1 Switch", TAS5766_MUTE, 0, 1, 1),
+	SOC_SINGLE("DAC_4c Ch2 Switch", TAS5766_MUTE, 4, 1, 1),
+};
+
+static const struct snd_kcontrol_new tas5766_snd_controls_4d[] = {
+	SOC_ENUM_EXT("DAC_4d Master Volume",
+			  Master_Volume_Enum,
+			   aml_master_vol_get_enum_4d,
+			   aml_master_vol_set_enum_4d),
+	SOC_SINGLE("DAC_4d Ch1 Switch", TAS5766_MUTE, 0, 1, 1),
+	SOC_SINGLE("DAC_4d Ch2 Switch", TAS5766_MUTE, 4, 1, 1),
+};
+
+static const struct snd_kcontrol_new tas5766_snd_controls_4e[] = {
+	SOC_ENUM_EXT("DAC_4e Master Volume",
+			  Master_Volume_Enum,
+			   aml_master_vol_get_enum_4e,
+			   aml_master_vol_set_enum_4e),
+	SOC_SINGLE("DAC_4e Ch1 Switch", TAS5766_MUTE, 0, 1, 1),
+	SOC_SINGLE("DAC_4e Ch2 Switch", TAS5766_MUTE, 4, 1, 1),
+};
+
+static int tas5766_probe(struct snd_soc_codec *codec)
+{
+	static int s_codec_cnt;
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+	struct tas57xx_platform_data *pdata = dev_get_platdata(codec->dev);
+
+	pr_info("%s...\n", __func__);
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	tas5766->early_suspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN;
+	tas5766->early_suspend.suspend = tas5766_early_suspend;
+	tas5766->early_suspend.resume = tas5766_late_resume;
+	tas5766->early_suspend.param = codec;
+	register_early_suspend(&(tas5766->early_suspend));
+#endif
+
+	tas5766->pdata = pdata;
+	tas5766_init(codec);
+	g_tas5766_codec[s_codec_cnt++] = codec;
+
+	return 0;
+}
+
+static int tas5766_remove(struct snd_soc_codec *codec)
+{
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+
+	unregister_early_suspend(&(tas5766->early_suspend));
+#endif
+
+	return 0;
+}
+
+#ifdef CONFIG_PM
+static int tas5766_suspend(struct snd_soc_codec *codec)
+{
+	struct tas57xx_platform_data *pdata = dev_get_platdata(codec->dev);
+
+	dev_info(codec->dev, "tas5766_suspend!\n");
+
+	if (pdata && pdata->suspend_func)
+		pdata->suspend_func();
+
+	return 0;
+}
+
+static int tas5766_resume(struct snd_soc_codec *codec)
+{
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+	struct tas57xx_platform_data *pdata = dev_get_platdata(codec->dev);
+
+	dev_info(codec->dev, "tas5766_resume!\n");
+
+	if (pdata && pdata->resume_func)
+		pdata->resume_func();
+
+	tas5766_init(codec);
+	tas5766_set_master_vol(codec, tas5766->master_vol);
+	return 0;
+}
+
+#else
+#define tas5766_suspend NULL
+#define tas5766_resume NULL
+#endif
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+static void tas5766_early_suspend(struct early_suspend *h)
+{
+}
+
+static void tas5766_late_resume(struct early_suspend *h)
+{
+}
+#endif
+
+static int tas5766_set_dai_sysclk(struct snd_soc_dai *codec_dai,
+				  int clk_id, unsigned int freq, int dir)
+{
+	return 0;
+}
+
+static int tas5766_set_dai_fmt(struct snd_soc_dai *codec_dai, unsigned int fmt)
+{
+	return 0;
+}
+
+static int tas5766_hw_params(struct snd_pcm_substream *substream,
+			     struct snd_pcm_hw_params *params,
+			     struct snd_soc_dai *dai)
+{
+	struct snd_soc_codec *codec = dai->codec;
+	struct tas5766_priv *tas5766 = snd_soc_codec_get_drvdata(codec);
+	static bool s_init_vol_flag;
+
+	pr_info("%s...\n", __func__);
+
+	if (!s_init_vol_flag) {
+		tas5766_set_master_vol(codec, tas5766->master_vol);
+		s_init_vol_flag = true;
+	}
+	tas5766_write_page0_reg(codec, TAS5766_MUTE, 0);
+
+	return 0;
+}
+
+static int tas5766_digital_mute(struct snd_soc_dai *dai, int mute)
+{
+	struct snd_soc_codec *codec = dai->codec;
+
+	pr_debug("%s mute=%d\n", __func__, mute);
+
+	if (mute)
+		tas5766_write_page0_reg(codec, TAS5766_MUTE, 0x11);
+	else
+		tas5766_write_page0_reg(codec, TAS5766_MUTE, 0);
+
+	return 0;
+}
+
+static const struct snd_soc_dai_ops tas5766_dai_ops = {
+	.hw_params = tas5766_hw_params,
+	.set_sysclk = tas5766_set_dai_sysclk,
+	.set_fmt = tas5766_set_dai_fmt,
+	.digital_mute = tas5766_digital_mute,
+};
+
+static struct snd_soc_dai_driver tas5766_dai = {
+	.name = "tas5766",
+	.playback = {
+		.stream_name = "HIFI Playback",
+		.channels_min = 2,
+		.channels_max = 8,
+		.rates = tas5766_RATES,
+		.formats = tas5766_FORMATS,
+	},
+	.ops = &tas5766_dai_ops,
+};
+
+#if 0
+static const struct snd_soc_dapm_widget tas5766_dapm_widgets[] = {
+	SND_SOC_DAPM_DAC("DAC", "HIFI Playback", SND_SOC_NOPM, 0, 0),
+};
+#endif
+
+static const struct snd_soc_codec_driver tas5766_codec_4c = {
+	.probe = tas5766_probe,
+	.remove = tas5766_remove,
+	.suspend = tas5766_suspend,
+	.resume = tas5766_resume,
+	.component_driver = {
+		.controls = tas5766_snd_controls_4c,
+		.num_controls = ARRAY_SIZE(tas5766_snd_controls_4c),
+	}
+};
+
+static const struct snd_soc_codec_driver tas5766_codec_4d = {
+	.probe = tas5766_probe,
+	.remove = tas5766_remove,
+	.suspend = tas5766_suspend,
+	.resume = tas5766_resume,
+	.component_driver = {
+		.controls = tas5766_snd_controls_4d,
+		.num_controls = ARRAY_SIZE(tas5766_snd_controls_4d),
+	}
+};
+
+static const struct snd_soc_codec_driver tas5766_codec_4e = {
+	.probe = tas5766_probe,
+	.remove = tas5766_remove,
+	.suspend = tas5766_suspend,
+	.resume = tas5766_resume,
+	.component_driver = {
+		.controls = tas5766_snd_controls_4e,
+		.num_controls = ARRAY_SIZE(tas5766_snd_controls_4e),
+	}
+};
+
+static int tas5766_i2c_probe(struct i2c_client *i2c,
+			     const struct i2c_device_id *id)
+{
+	struct tas5766_priv *tas5766;
+	struct regmap *regmap;
+	struct regmap_config config = tas5766_regmap;
+	int gpio3_fb, ret = 0;
+
+	pr_info("%s i2c_addr:0x%x\n", __func__, i2c->addr);
+	tas5766 = devm_kzalloc(&i2c->dev, sizeof(struct tas5766_priv),
+			       GFP_KERNEL);
+	if (!tas5766)
+		return -ENOMEM;
+
+	regmap = devm_regmap_init_i2c(i2c, &config);
+	if (IS_ERR(regmap))
+		return PTR_ERR(regmap);
+
+	i2c_set_clientdata(i2c, tas5766);
+
+	ret = of_property_read_u8(i2c->dev.of_node, "master_vol",
+		&tas5766->master_vol);
+	if (ret) {
+		pr_err("tas5766 failed to get master_vol, set it default\n");
+		tas5766->master_vol = 150;
+		ret = 0;
+	}
+
+	ret = of_get_named_gpio(i2c->dev.of_node, "gpio-fb", 0);
+	if (ret > 0) {
+		gpio3_fb = ret;
+		ret = devm_gpio_request_one(&i2c->dev, gpio3_fb,
+			GPIOF_IN, "tas5766-data-fb-pin");
+		if (ret < 0) {
+			dev_err(&i2c->dev, "tas5766 failed to acquire gpio\n");
+			return ret;
+		}
+		pr_info("tas5766 set data fb gpio!\n");
+	} else {
+		pr_err("tas5766 failed to get gpio-fb\n");
+		ret = 0;
+	}
+
+	switch (i2c->addr) {
+	case 0x4c:
+		ret = snd_soc_register_codec(&i2c->dev,
+			&tas5766_codec_4c, &tas5766_dai, 1);
+		break;
+	case 0x4d:
+		ret = snd_soc_register_codec(&i2c->dev,
+			&tas5766_codec_4d, &tas5766_dai, 1);
+		break;
+	case 0x4e:
+		ret = snd_soc_register_codec(&i2c->dev,
+			&tas5766_codec_4e, &tas5766_dai, 1);
+		break;
+	}
+
+	if (ret != 0)
+		dev_err(&i2c->dev, "Failed to register codec (%d)\n", ret);
+
+	return ret;
+}
+
+static int tas5766_i2c_remove(struct i2c_client *client)
+{
+	devm_kfree(&client->dev, i2c_get_clientdata(client));
+	return 0;
+}
+
+static const struct i2c_device_id tas5766_i2c_id[] = {
+	{ "tas5766", 0 },
+	{}
+};
+
+static struct i2c_driver tas5766_i2c_driver = {
+	.driver = {
+		.name = "tas5766",
+		.owner = THIS_MODULE,
+	},
+	.probe = tas5766_i2c_probe,
+	.remove = tas5766_i2c_remove,
+	.id_table = tas5766_i2c_id,
+};
+
+static int aml_tas5766_codec_probe(struct platform_device *pdev)
+{
+	return 0;
+}
+
+static int aml_tas5766_codec_remove(struct platform_device *pdev)
+{
+	return 0;
+}
+
+static const struct of_device_id amlogic_tas5766_codec_dt_match[] = {
+	{ .compatible = "ti,tas5766", },
+	{},
+};
+
+static struct platform_driver aml_tas5766_codec_platform_driver = {
+	.driver = {
+		.name = "tas5766",
+		.owner = THIS_MODULE,
+		.of_match_table = amlogic_tas5766_codec_dt_match,
+	},
+	.probe = aml_tas5766_codec_probe,
+	.remove = aml_tas5766_codec_remove,
+};
+
+static int __init aml_tas5766_modinit(void)
+{
+	int ret = 0;
+
+	ret = platform_driver_register(&aml_tas5766_codec_platform_driver);
+	if (ret != 0)
+		pr_err("Failed to register codec tas5766 platform driver\n");
+	i2c_add_driver(&tas5766_i2c_driver);
+	return ret;
+}
+
+static void __exit aml_tas5766_exit(void)
+{
+	platform_driver_unregister(&aml_tas5766_codec_platform_driver);
+	i2c_del_driver(&tas5766_i2c_driver);
+}
+
+module_init(aml_tas5766_modinit);
+module_exit(aml_tas5766_exit);
+
+MODULE_DESCRIPTION("ASoC Tas5766 driver");
+MODULE_AUTHOR("AML MM team");
+MODULE_LICENSE("GPL");
+
diff --git a/sound/soc/codecs/amlogic/tas5766.h b/sound/soc/codecs/amlogic/tas5766.h
new file mode 100644
index 00000000..ba77df55
--- /dev/null
+++ b/sound/soc/codecs/amlogic/tas5766.h
@@ -0,0 +1,60 @@
+
+#ifndef __TAS5766M_H__
+#define __TAS5766M_H__
+
+/* Page 0 */
+#define TAS5766_PAGE_SELECT                     0
+#define TAS5766_ANALOG_CONTROL                  1
+#define TAS5766_STANBY_POWERDOWN                2
+#define TAS5766_MUTE                            3
+#define TAS5766_PLL_SETTING                     4
+#define TAS5766_SDOUT_SELECT                    7
+#define TAS5766_GPIO_MUTE_CTRL                  8
+#define TAS5766_CLK_CONFIG                      9
+#define TAS5766_DSP_GPIO_INPUT                  10
+#define TAS5766_MASTER_CLK                      12
+#define TAS5766_PLL_CLK_SOURCE	                13
+
+#define TAS5766_DSP_CLK_DIVIDER                 27
+#define TAS5766_DAC_CLK_DIVIDER                 28
+#define TAS5766_NCP_CLK_DIVIDER                 29
+#define TAS5766_OSR_CLK_DIVIDER                 30
+#define TAS5766_MASTER_DIVIDER0                 32
+#define TAS5766_MASTER_DIVIDER1                 33
+#define TAS5766_FS_SPEED_MODE                   34
+#define TAS5766_IDAC                            35
+
+#define TAS5766_IGNORE_ERRORS			37
+
+#define TAS5766_I2S_CONFIG			40
+
+#define TAS5766_DAC_DATA_PATH			42
+#define TAS5766_DSP_PROGRAM_SEL			43
+#define TAS5766_CLK_MISSING_DET			44
+
+#define TAS5766_AUTO_MUTE_TIME			59
+
+#define TAS5766_LEFT_VOLUME			61
+#define TAS5766_RIGHT_VOLUME			62
+
+#define TAS5766_AUTO_MUTE			65
+
+#define TAS5766_DSP_OVERFLOW			90
+
+#define TAS5766_ANALOG_MUTE_MONITOR		108
+#define TAS5766_GPIO_INPUT			119
+#define TAS5766_AUTO_MUTE_FLAG			120
+
+/* Page1 */
+#define TAS5766_ANALOG_GAIN_CTRL		2
+
+#define TAS5766_UNDERVOLTAGE_PROTECT		5
+#define TAS5766_ANALOG_MUTE_CTRL		6
+#define TAS5766_ANALOG_GAIN_BOOST		7
+
+/* Page44 */
+#define TAS5766_COEFF_MEM_CTRL			1
+#define TAS5766_COEFF_BUFF_A			44
+#define TAS5766_COEFF_BUFF_B			66
+#endif
+
diff --git a/sound/soc/codecs/amlogic/tas5825.c b/sound/soc/codecs/amlogic/tas5825.c
new file mode 100644
index 00000000..54dfddf
--- /dev/null
+++ b/sound/soc/codecs/amlogic/tas5825.c
@@ -0,0 +1,1001 @@
+/*
+ * Driver for the TAS5805M Audio Amplifier
+ *
+ * Author: Andy Liu <andy-liu@ti.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ */
+
+#include <linux/module.h>
+#include <linux/moduleparam.h>
+#include <linux/slab.h>
+#include <linux/of.h>
+#include <linux/init.h>
+#include <linux/i2c.h>
+#include <linux/regmap.h>
+
+#include <sound/soc.h>
+#include <sound/pcm.h>
+#include <sound/initval.h>
+#include <linux/amlogic/aml_gpio_consumer.h>
+
+//#include "tas5805.h"
+#define TAS5805M_DRV_NAME    "tas5805"
+
+#define TAS5805M_RATES	     (SNDRV_PCM_RATE_48000)
+#define TAS5805M_FORMATS     (SNDRV_PCM_FMTBIT_S16_LE |\
+					SNDRV_PCM_FMTBIT_S20_3LE |\
+					SNDRV_PCM_FMTBIT_S24_LE |\
+					SNDRV_PCM_FMTBIT_S32_LE)
+
+#define TAS5825M_REG_00      (0x00)
+#define TAS5825M_REG_03      (0x03)
+#define TAS5825M_REG_0C      (0x0c)
+#define TAS5825M_REG_0D      (0x0d)
+#define TAS5825M_REG_0E      (0x0e)
+#define TAS5825M_REG_0F      (0x0f)
+#define TAS5825M_REG_10      (0x10)
+#define TAS5825M_REG_11      (0x11)
+#define TAS5825M_REG_12      (0x12)
+#define TAS5825M_REG_13      (0x13)
+#define TAS5825M_REG_35      (0x35)
+#define TAS5825M_REG_7F      (0x7f)
+
+#define TAS5825M_PAGE_00     (0x00)
+#define TAS5825M_PAGE_0B     (0x0b)
+
+#define TAS5825M_BOOK_00     (0x00)
+#define TAS5825M_BOOK_8C     (0x8c)
+
+#define TAS5825M_VOLUME_MAX  (158)
+#define TAS5825M_VOLUME_MIN  (0)
+
+
+#define CFG_META_SWITCH (255)
+#define CFG_META_DELAY  (254)
+#define CFG_META_BURST  (253)
+
+static const int  tas5805m_init_sequence[][2] = {
+#if 0
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x03, 0x03 },
+	{ 0x78, 0x80 },
+#else
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x03, 0x02 },
+	{ 0x01, 0x11 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x46, 0x11 },
+	{ 0x00, 0x00 },
+	{ 0x02, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x29, 0x7c },
+	{ 0x03, 0x02 },
+	{ CFG_META_DELAY, 5 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x7d, 0x11 },
+	{ 0x7e, 0xff },
+	{ 0x00, 0x01 },
+	{ 0x51, 0x05 },
+	{ 0x00, 0x02 },
+	{ 0x1d, 0x10 },
+	{ 0x19, 0x80 },
+
+
+// Book 0x8c
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x8c },
+	{ 0x00, 0x01 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x71 },
+	{ 0x2e, 0x94 },
+	{ 0x2f, 0x9a },
+	{ 0x00, 0x0a },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x80 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x80 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x80 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x00, 0x0b },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x80 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x04 },
+	{ 0x0e, 0x0c },
+	{ 0x0f, 0x37 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x04 },
+	{ 0x12, 0x0c },
+	{ 0x13, 0x37 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x80 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x80 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x01 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x01 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x57 },
+	{ 0x33, 0x62 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+
+//Register Tuning
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x30, 0x00 },
+	{ 0x60, 0x02 },
+	{ 0x62, 0x09 },
+	{ 0x4c, 0x30 },
+	{ 0x03, 0x03 },
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x78, 0x80 },
+#endif
+};
+
+struct tas5805m_platform_data {
+	int reset_pin;
+};
+
+
+const uint32_t tas5825m_volume[] = {
+	0x0000001B,    //0, -110dB
+	0x0000001E,    //1, -109dB
+	0x00000021,    //2, -108dB
+	0x00000025,    //3, -107dB
+	0x0000002A,    //4, -106dB
+	0x0000002F,    //5, -105dB
+	0x00000035,    //6, -104dB
+	0x0000003B,    //7, -103dB
+	0x00000043,    //8, -102dB
+	0x0000004B,    //9, -101dB
+	0x00000054,    //10, -100dB
+	0x0000005E,    //11, -99dB
+	0x0000006A,    //12, -98dB
+	0x00000076,    //13, -97dB
+	0x00000085,    //14, -96dB
+	0x00000095,    //15, -95dB
+	0x000000A7,    //16, -94dB
+	0x000000BC,    //17, -93dB
+	0x000000D3,    //18, -92dB
+	0x000000EC,    //19, -91dB
+	0x00000109,    //20, -90dB
+	0x0000012A,    //21, -89dB
+	0x0000014E,    //22, -88dB
+	0x00000177,    //23, -87dB
+	0x000001A4,    //24, -86dB
+	0x000001D8,    //25, -85dB
+	0x00000211,    //26, -84dB
+	0x00000252,    //27, -83dB
+	0x0000029A,    //28, -82dB
+	0x000002EC,    //29, -81dB
+	0x00000347,    //30, -80dB
+	0x000003AD,    //31, -79dB
+	0x00000420,    //32, -78dB
+	0x000004A1,    //33, -77dB
+	0x00000532,    //34, -76dB
+	0x000005D4,    //35, -75dB
+	0x0000068A,    //36, -74dB
+	0x00000756,    //37, -73dB
+	0x0000083B,    //38, -72dB
+	0x0000093C,    //39, -71dB
+	0x00000A5D,    //40, -70dB
+	0x00000BA0,    //41, -69dB
+	0x00000D0C,    //42, -68dB
+	0x00000EA3,    //43, -67dB
+	0x0000106C,    //44, -66dB
+	0x0000126D,    //45, -65dB
+	0x000014AD,    //46, -64dB
+	0x00001733,    //47, -63dB
+	0x00001A07,    //48, -62dB
+	0x00001D34,    //49, -61dB
+	0x000020C5,    //50, -60dB
+	0x000024C4,    //51, -59dB
+	0x00002941,    //52, -58dB
+	0x00002E49,    //53, -57dB
+	0x000033EF,    //54, -56dB
+	0x00003A45,    //55, -55dB
+	0x00004161,    //56, -54dB
+	0x0000495C,    //57, -53dB
+	0x0000524F,    //58, -52dB
+	0x00005C5A,    //59, -51dB
+	0x0000679F,    //60, -50dB
+	0x00007444,    //61, -49dB
+	0x00008274,    //62, -48dB
+	0x0000925F,    //63, -47dB
+	0x0000A43B,    //64, -46dB
+	0x0000B845,    //65, -45dB
+	0x0000CEC1,    //66, -44dB
+	0x0000E7FB,    //67, -43dB
+	0x00010449,    //68, -42dB
+	0x0001240C,    //69, -41dB
+	0x000147AE,    //70, -40dB
+	0x00016FAA,    //71, -39dB
+	0x00019C86,    //72, -38dB
+	0x0001CEDC,    //73, -37dB
+	0x00020756,    //74, -36dB
+	0x000246B5,    //75, -35dB
+	0x00028DCF,    //76, -34dB
+	0x0002DD96,    //77, -33dB
+	0x00033718,    //78, -32dB
+	0x00039B87,    //79, -31dB
+	0x00040C37,    //80, -30dB
+	0x00048AA7,    //81, -29dB
+	0x00051884,    //82, -28dB
+	0x0005B7B1,    //83, -27dB
+	0x00066A4A,    //84, -26dB
+	0x000732AE,    //85, -25dB
+	0x00081385,    //86, -24dB
+	0x00090FCC,    //87, -23dB
+	0x000A2ADB,    //88, -22dB
+	0x000B6873,    //89, -21dB
+	0x000CCCCD,    //90, -20dB
+	0x000E5CA1,    //91, -19dB
+	0x00101D3F,    //92, -18dB
+	0x0012149A,    //93, -17dB
+	0x00144961,    //94, -16dB
+	0x0016C311,    //95, -15dB
+	0x00198A13,    //96, -14dB
+	0x001CA7D7,    //97, -13dB
+	0x002026F3,    //98, -12dB
+	0x00241347,    //99, -11dB
+	0x00287A27,    //100, -10dB
+	0x002D6A86,    //101, -9dB
+	0x0032F52D,    //102, -8dB
+	0x00392CEE,    //103, -7dB
+	0x004026E7,    //104, -6dB
+	0x0047FACD,    //105, -5dB
+	0x0050C336,    //106, -4dB
+	0x005A9DF8,    //107, -3dB
+	0x0065AC8C,    //108, -2dB
+	0x00721483,    //109, -1dB
+	0x00800000,    //110, 0dB
+	0x008F9E4D,    //111, 1dB
+	0x00A12478,    //112, 2dB
+	0x00B4CE08,    //113, 3dB
+	0x00CADDC8,    //114, 4dB
+	0x00E39EA9,    //115, 5dB
+	0x00FF64C1,    //116, 6dB
+	0x011E8E6A,    //117, 7dB
+	0x0141857F,    //118, 8dB
+	0x0168C0C6,    //119, 9dB
+	0x0194C584,    //120, 10dB
+	0x01C62940,    //121, 11dB
+	0x01FD93C2,    //122, 12dB
+	0x023BC148,    //123, 13dB
+	0x02818508,    //124, 14dB
+	0x02CFCC01,    //125, 15dB
+	0x0327A01A,    //126, 16dB
+	0x038A2BAD,    //127, 17dB
+	0x03F8BD7A,    //128, 18dB
+	0x0474CD1B,    //129, 19dB
+	0x05000000,    //130, 20dB
+	0x059C2F02,    //131, 21dB
+	0x064B6CAE,    //132, 22dB
+	0x07100C4D,    //133, 23dB
+	0x07ECA9CD,    //134, 24dB
+	0x08E43299,    //135, 25dB
+	0x09F9EF8E,    //136, 26dB
+	0x0B319025,    //137, 27dB
+	0x0C8F36F2,    //138, 28dB
+	0x0E1787B8,    //139, 29dB
+	0x0FCFB725,    //140, 30dB
+	0x11BD9C84,    //141, 31dB
+	0x13E7C594,    //142, 32dB
+	0x16558CCB,    //143, 33dB
+	0x190F3254,    //144, 34dB
+	0x1C1DF80E,    //145, 35dB
+	0x1F8C4107,    //146, 36dB
+	0x2365B4BF,    //147, 37dB
+	0x27B766C2,    //148, 38dB
+	0x2C900313,    //149, 39dB
+	0x32000000,    //150, 40dB
+	0x3819D612,    //151, 41dB
+	0x3EF23ECA,    //152, 42dB
+	0x46A07B07,    //153, 43dB
+	0x4F3EA203,    //154, 44dB
+	0x58E9F9F9,    //155, 45dB
+	0x63C35B8E,    //156, 46dB
+	0x6FEFA16D,    //157, 47dB
+	0x7D982575,    //158, 48dB
+};
+
+
+#define TAS5805_EQPARAM_LENGTH 610
+#define TAS5805_EQ_LENGTH 245
+#define FILTER_PARAM_BYTE 244
+static  int m_eq_tab[TAS5805_EQPARAM_LENGTH][2] = {0};
+#define TAS5805_DRC_PARAM_LENGTH 29
+#define TAS5805_DRC_PARAM_COUNT  58
+static  int m_drc_tab[TAS5805_DRC_PARAM_LENGTH][2] = {0};
+
+struct tas5805m_priv {
+	struct regmap *regmap;
+	struct tas5805m_platform_data *pdata;
+	int vol;
+	int mute;
+	struct snd_soc_codec *codec;
+};
+
+const struct regmap_config tas5805m_regmap = {
+	.reg_bits = 8,
+	.val_bits = 8,
+	.cache_type = REGCACHE_RBTREE,
+};
+
+static int tas5805m_vol_info(struct snd_kcontrol *kcontrol,
+			     struct snd_ctl_elem_info *uinfo)
+{
+	uinfo->type = SNDRV_CTL_ELEM_TYPE_INTEGER;
+	uinfo->access =
+	    (SNDRV_CTL_ELEM_ACCESS_TLV_READ | SNDRV_CTL_ELEM_ACCESS_READWRITE);
+	uinfo->count = 1;
+
+	uinfo->value.integer.min = TAS5825M_VOLUME_MIN;
+	uinfo->value.integer.max = TAS5825M_VOLUME_MAX;
+	uinfo->value.integer.step = 1;
+
+	return 0;
+}
+
+static int tas5805m_mute_info(struct snd_kcontrol *kcontrol,
+			      struct snd_ctl_elem_info *uinfo)
+{
+	uinfo->type = SNDRV_CTL_ELEM_TYPE_INTEGER;
+	uinfo->access =
+	    (SNDRV_CTL_ELEM_ACCESS_TLV_READ | SNDRV_CTL_ELEM_ACCESS_READWRITE);
+	uinfo->count = 1;
+
+	uinfo->value.integer.min  = TAS5825M_VOLUME_MIN;
+	uinfo->value.integer.max  = TAS5825M_VOLUME_MAX;
+	uinfo->value.integer.step = 1;
+
+	return 0;
+}
+
+static int tas5805m_vol_locked_get(struct snd_kcontrol *kcontrol,
+				   struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = snd_soc_kcontrol_codec(kcontrol);
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+
+	pr_info("tms> tas5805m_vol_locked_get\n");
+	ucontrol->value.integer.value[0] = tas5805m->vol;
+
+	return 0;
+}
+
+static inline int get_volume_index(int vol)
+{
+	int index;
+
+	index = vol;
+
+	if (index < TAS5825M_VOLUME_MIN)
+		index = TAS5825M_VOLUME_MIN;
+
+	if (index > TAS5825M_VOLUME_MAX)
+		index = TAS5825M_VOLUME_MAX;
+
+	return index;
+}
+
+static void tas5825m_set_volume(struct snd_soc_codec *codec, int vol)
+{
+	unsigned int index;
+	uint32_t volume_hex;
+	uint8_t byte4;
+	uint8_t byte3;
+	uint8_t byte2;
+	uint8_t byte1;
+
+	pr_info("tms> tas5825m_set_volume %d\n", vol);
+
+	index = get_volume_index(vol);
+	volume_hex = tas5825m_volume[index];
+
+	byte4 = ((volume_hex >> 24) & 0xFF);
+	byte3 = ((volume_hex >> 16) & 0xFF);
+	byte2 = ((volume_hex >> 8)	& 0xFF);
+	byte1 = ((volume_hex >> 0)	& 0xFF);
+
+	//w 98 00 00
+	snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_00);
+	//w 98 7f 8c
+	snd_soc_write(codec, TAS5825M_REG_7F, TAS5825M_BOOK_8C);
+	//w 98 00 0b
+	snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_0B);
+	//w 98 0c xx xx xx xx
+	snd_soc_write(codec, TAS5825M_REG_0C, byte4);
+	snd_soc_write(codec, TAS5825M_REG_0D, byte3);
+	snd_soc_write(codec, TAS5825M_REG_0E, byte2);
+	snd_soc_write(codec, TAS5825M_REG_0F, byte1);
+	//w 98 10 xx xx xx xx
+	snd_soc_write(codec, TAS5825M_REG_10, byte4);
+	snd_soc_write(codec, TAS5825M_REG_11, byte3);
+	snd_soc_write(codec, TAS5825M_REG_12, byte2);
+	snd_soc_write(codec, TAS5825M_REG_13, byte1);
+}
+
+static int tas5805m_vol_locked_put(struct snd_kcontrol *kcontrol,
+				   struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = snd_soc_kcontrol_codec(kcontrol);
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+
+
+	tas5805m->vol = ucontrol->value.integer.value[0];
+	tas5825m_set_volume(codec, tas5805m->vol);
+
+	return 0;
+}
+
+static int tas5805m_mute(struct snd_soc_codec *codec, int mute)
+{
+	u8 reg03_value = 0;
+	u8 reg35_value = 0;
+
+	pr_info("tms> tas5805m_mute >>> %d <<<\n", mute);
+	if (mute) {
+		//mute both left & right channels
+		reg03_value = 0x0b;
+		reg35_value = 0x00;
+	} else {
+		//unmute
+		reg03_value = 0x03;
+		reg35_value = 0x11;
+	}
+
+	snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_00);
+	snd_soc_write(codec, TAS5825M_REG_7F, TAS5825M_BOOK_00);
+	snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_00);
+	snd_soc_write(codec, TAS5825M_REG_03, reg03_value);
+	snd_soc_write(codec, TAS5825M_REG_35, reg35_value);
+
+	return 0;
+}
+
+static int tas5805m_mute_locked_put(struct snd_kcontrol *kcontrol,
+				    struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = snd_soc_kcontrol_codec(kcontrol);
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+
+	tas5805m->mute = ucontrol->value.integer.value[0];
+	tas5805m_mute(codec, tas5805m->mute);
+
+	return 0;
+}
+
+static int tas5805m_mute_locked_get(struct snd_kcontrol *kcontrol,
+				    struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = snd_soc_kcontrol_codec(kcontrol);
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+
+	ucontrol->value.integer.value[0] = tas5805m->mute;
+	return 0;
+}
+
+static int tas5805_set_EQ_enum(struct snd_kcontrol *kcontrol,
+				   struct snd_ctl_elem_value *ucontrol)
+{
+	return 0;
+}
+
+static int tas5805_get_EQ_enum(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)
+{
+	return 0;
+}
+
+static int tas5805_set_DRC_enum(struct snd_kcontrol *kcontrol,
+				   struct snd_ctl_elem_value *ucontrol)
+{
+	return 0;
+}
+
+static int tas5805_get_DRC_enum(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)
+{
+	return 0;
+}
+
+static int tas5805_set_DRC_param(struct snd_kcontrol *kcontrol,
+				   struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = snd_soc_kcontrol_codec(kcontrol);
+	void *data;
+	char tmp_string[TAS5805_DRC_PARAM_COUNT];
+	char *p_string = &tmp_string[0];
+	u8 *val;
+	unsigned int i = 0;
+
+	data = kmemdup(ucontrol->value.bytes.data,
+		TAS5805_DRC_PARAM_COUNT, GFP_KERNEL | GFP_DMA);
+	if (!data)
+		return -ENOMEM;
+
+	val = (u8 *)data;
+	memcpy(p_string, val, TAS5805_DRC_PARAM_COUNT);
+
+	for (i = 0; i < TAS5805_DRC_PARAM_COUNT/2; i++) {
+		m_drc_tab[i][0] = tmp_string[2*i];
+		m_drc_tab[i][1] = tmp_string[2*i+1];
+	}
+
+	for (i = 0; i < TAS5805_DRC_PARAM_LENGTH; i++)
+		snd_soc_write(codec, m_drc_tab[i][0], m_drc_tab[i][1]);
+
+	kfree(data);
+	return 0;
+}
+
+static int tas5805_get_DRC_param(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)
+{
+	return 0;
+}
+
+
+static int tas5805_set_EQ_param(struct snd_kcontrol *kcontrol,
+				   struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_codec *codec = snd_soc_kcontrol_codec(kcontrol);
+	void *data;
+	char tmp_string[TAS5805_EQ_LENGTH];
+	char *p_string = &tmp_string[0];
+	u8 *val;
+	int band_id;
+	unsigned int i = 0, j = 0;
+
+	data = kmemdup(ucontrol->value.bytes.data,
+		TAS5805_EQ_LENGTH, GFP_KERNEL | GFP_DMA);
+	if (!data)
+		return -ENOMEM;
+
+	val = (u8 *) data;
+	memcpy(p_string, val, TAS5805_EQ_LENGTH);
+	band_id = tmp_string[0];
+	for (j = 0, i = band_id * FILTER_PARAM_BYTE / 2;
+			j < FILTER_PARAM_BYTE / 2; i++, j++) {
+		m_eq_tab[i][0] = tmp_string[2*j+1];
+		m_eq_tab[i][1] = tmp_string[2*j+2];
+	}
+	if (band_id == 4) {
+		for (i = 0; i < TAS5805_EQPARAM_LENGTH; i++)
+			snd_soc_write(codec, m_eq_tab[i][0], m_eq_tab[i][1]);
+	}
+	kfree(data);
+	return 0;
+}
+
+static int tas5805_get_EQ_param(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)
+{
+	return 0;
+}
+
+
+static const struct snd_kcontrol_new tas5805m_vol_control[] = {
+	{
+	 .iface = SNDRV_CTL_ELEM_IFACE_MIXER,
+	 .name = "Master Volume",
+	 .info = tas5805m_vol_info,
+	 .get = tas5805m_vol_locked_get,
+	 .put = tas5805m_vol_locked_put,
+	 },
+	{
+	 .iface = SNDRV_CTL_ELEM_IFACE_MIXER,
+	 .name = "Maser Volume Mute",
+	 .info = tas5805m_mute_info,
+	 .get = tas5805m_mute_locked_get,
+	 .put = tas5805m_mute_locked_put,
+	},
+	SOC_SINGLE_BOOL_EXT("Set EQ Enable", 0,
+			   tas5805_get_EQ_enum, tas5805_set_EQ_enum),
+	SOC_SINGLE_BOOL_EXT("Set DRC Enable", 0,
+			   tas5805_get_DRC_enum, tas5805_set_DRC_enum),
+	SND_SOC_BYTES_EXT("EQ table", TAS5805_EQ_LENGTH,
+			   tas5805_get_EQ_param, tas5805_set_EQ_param),
+	SND_SOC_BYTES_EXT("DRC table", TAS5805_DRC_PARAM_COUNT,
+			   tas5805_get_DRC_param, tas5805_set_DRC_param),
+};
+
+static int tas5805m_set_bias_level(struct snd_soc_codec *codec,
+				  enum snd_soc_bias_level level)
+{
+	pr_debug("level = %d\n", level);
+
+	switch (level) {
+	case SND_SOC_BIAS_ON:
+		break;
+
+	case SND_SOC_BIAS_PREPARE:
+		/* Full power on */
+		break;
+
+	case SND_SOC_BIAS_STANDBY:
+		break;
+
+	case SND_SOC_BIAS_OFF:
+		/* The chip runs through the power down sequence for us. */
+		break;
+	}
+	codec->component.dapm.bias_level = level;
+
+	return 0;
+}
+
+static int tas5805m_trigger(struct snd_pcm_substream *substream, int cmd,
+			       struct snd_soc_dai *codec_dai)
+{
+	struct tas5805m_priv *tas5805m = snd_soc_dai_get_drvdata(codec_dai);
+	struct snd_soc_codec *codec = tas5805m->codec;
+
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK) {
+		switch (cmd) {
+		case SNDRV_PCM_TRIGGER_START:
+		case SNDRV_PCM_TRIGGER_RESUME:
+		case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
+			pr_debug("%s(), start\n", __func__);
+			snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_00);
+			snd_soc_write(codec, TAS5825M_REG_7F, TAS5825M_BOOK_00);
+			snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_00);
+//tms			snd_soc_write(codec, TAS5825M_DIG_VAL_CTL, 0x30);
+			break;
+		case SNDRV_PCM_TRIGGER_STOP:
+		case SNDRV_PCM_TRIGGER_SUSPEND:
+		case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
+			pr_debug("%s(), stop\n", __func__);
+			snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_00);
+			snd_soc_write(codec, TAS5825M_REG_7F, TAS5825M_BOOK_00);
+			snd_soc_write(codec, TAS5825M_REG_00, TAS5825M_PAGE_00);
+//tms			snd_soc_write(codec, TAS5825M_DIG_VAL_CTL, 0xff);
+			break;
+		}
+	}
+	return 0;
+}
+static int reset_tas5805m_GPIO(struct device *dev)
+{
+	struct tas5805m_priv *tas5805m =  dev_get_drvdata(dev);
+	struct tas5805m_platform_data *pdata = tas5805m->pdata;
+	int ret = 0;
+
+	if (pdata->reset_pin < 0)
+		return 0;
+
+	ret = devm_gpio_request_one(dev, pdata->reset_pin,
+					    GPIOF_OUT_INIT_LOW,
+					    "tas5805m-reset-pin");
+	if (ret < 0)
+		return -1;
+
+	gpio_direction_output(pdata->reset_pin, GPIOF_OUT_INIT_LOW);
+	usleep_range(1 * 1000, 2 * 1000);
+	gpio_direction_output(pdata->reset_pin, GPIOF_OUT_INIT_HIGH);
+	usleep_range(5 * 1000, 6 * 1000);
+
+	return 0;
+}
+
+static int tas5805m_snd_suspend(struct snd_soc_codec *codec)
+{
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+	struct tas5805m_platform_data *pdata = tas5805m->pdata;
+
+	dev_info(codec->dev, "tas5805m_suspend!\n");
+	tas5805m_set_bias_level(codec, SND_SOC_BIAS_OFF);
+
+	if (pdata->reset_pin)
+		gpio_direction_output(pdata->reset_pin, GPIOF_OUT_INIT_LOW);
+	udelay(10);
+	return 0;
+}
+
+static int tas5805m_reg_init(struct snd_soc_codec *codec)
+{
+	//int i, j = 0;
+	int i = 0;
+
+
+	pr_err("tms> tas5805m_reg_init begin normal\n");
+#if 0
+	for (j = 0; j < ARRAY_SIZE(tas5805m_reset); j++) {
+		snd_soc_write(codec, tas5805m_reset[j][0],
+			tas5805m_reset[j][1]);
+	};
+#endif
+	usleep_range(10 * 1000, 11 * 1000);
+
+	for (i = 0; i < ARRAY_SIZE(tas5805m_init_sequence); i++) {
+		snd_soc_write(codec, tas5805m_init_sequence[i][0],
+			tas5805m_init_sequence[i][1]);
+	};
+	pr_err("tms> tas5805m_reg_init exit (normal)\n");
+	return 0;
+
+}
+
+static int tas5805m_snd_resume(struct snd_soc_codec *codec)
+{
+	int ret;
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+	struct tas5805m_platform_data *pdata = tas5805m->pdata;
+
+	dev_info(codec->dev, "tas5805m_snd_resume!\n");
+
+	dev_err(codec->dev, "tms> tas5805m_snd_resume\n");
+
+	if (pdata->reset_pin)
+		gpio_direction_output(pdata->reset_pin, GPIOF_OUT_INIT_HIGH);
+
+	usleep_range(3 * 1000, 4 * 1000);
+
+	ret = tas5805m_reg_init(codec);
+//	    regmap_register_patch(tas5805m->regmap, tas5805m_init_sequence,
+//				  ARRAY_SIZE(tas5805m_init_sequence));
+	if (ret != 0) {
+		dev_err(codec->dev, "Failed to initialize TAS5805M: %d\n", ret);
+		goto err;
+	}
+
+	tas5825m_set_volume(codec, tas5805m->vol);
+	tas5805m_set_bias_level(codec, SND_SOC_BIAS_STANDBY);
+
+	return 0;
+err:
+	return ret;
+}
+
+
+
+
+static int tas5805m_probe(struct snd_soc_codec *codec)
+{
+	int ret;
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+
+	pr_err("tms> tas5805m_probe printk\n");
+//	ret =
+//	    regmap_register_patch(tas5805m->regmap, tas5805m_init_sequence,
+//				  ARRAY_SIZE(tas5805m_init_sequence));
+	usleep_range(20 * 1000, 21 * 1000);
+	ret = tas5805m_reg_init(codec);
+	if (ret != 0)
+		goto err;
+
+	if (tas5805m)
+		tas5825m_set_volume(codec, tas5805m->vol);
+
+	snd_soc_add_codec_controls(codec, tas5805m_vol_control,
+			ARRAY_SIZE(tas5805m_vol_control));
+	tas5805m->codec = codec;
+	return 0;
+
+err:
+	return ret;
+
+}
+
+static int tas5805m_remove(struct snd_soc_codec *codec)
+{
+	struct tas5805m_priv *tas5805m = snd_soc_codec_get_drvdata(codec);
+	struct tas5805m_platform_data *pdata = tas5805m->pdata;
+
+	if (pdata->reset_pin)
+		gpio_direction_output(pdata->reset_pin, GPIOF_OUT_INIT_LOW);
+
+	udelay(10);
+
+	return 0;
+}
+
+static struct snd_soc_codec_driver soc_codec_tas5805m = {
+	.probe = tas5805m_probe,
+	.remove = tas5805m_remove,
+	.suspend = tas5805m_snd_suspend,
+	.resume = tas5805m_snd_resume,
+	.set_bias_level = tas5805m_set_bias_level,
+};
+
+static const struct snd_soc_dai_ops tas5805m_dai_ops = {
+	//.digital_mute = tas5805m_mute,
+	.trigger = tas5805m_trigger,
+};
+
+static struct snd_soc_dai_driver tas5805m_dai = {
+	.name = "tas5805m-amplifier",
+	.playback = {
+		     .stream_name = "Playback",
+		     .channels_min = 2,
+		     .channels_max = 8,
+		     .rates = TAS5805M_RATES,
+		     .formats = TAS5805M_FORMATS,
+		     },
+	.ops = &tas5805m_dai_ops,
+};
+
+static int tas5805m_parse_dt(
+	struct tas5805m_priv *tas5805m,
+	struct device_node *np)
+{
+	int ret = 0;
+	int reset_pin = -1;
+
+	reset_pin = of_get_named_gpio(np, "reset_pin", 0);
+#if 0
+	if (reset_pin < 0) {
+		pr_err("%s fail to get reset pin from dts!\n", __func__);
+		ret = -1;
+	} else {
+		pr_info("%s pdata->reset_pin = %d!\n", __func__,
+				tas5805m->pdata->reset_pin);
+	}
+#endif
+	tas5805m->pdata->reset_pin = reset_pin;
+
+	return ret;
+}
+
+static int tas5805m_i2c_probe(struct i2c_client *i2c,
+			      const struct i2c_device_id *id)
+{
+	struct regmap *regmap;
+	struct regmap_config config = tas5805m_regmap;
+	struct tas5805m_priv *tas5805m;
+	struct tas5805m_platform_data *pdata;
+	int ret = 0;
+
+
+	pr_err("%s tms> tas5805m_i2c_probe\n", __func__);
+
+	tas5805m = devm_kzalloc(&i2c->dev,
+		sizeof(struct tas5805m_priv), GFP_KERNEL);
+	if (!tas5805m)
+		return -ENOMEM;
+
+	regmap = devm_regmap_init_i2c(i2c, &config);
+	if (IS_ERR(regmap))
+		return PTR_ERR(regmap);
+
+	pdata = devm_kzalloc(&i2c->dev,
+				sizeof(struct tas5805m_platform_data),
+				GFP_KERNEL);
+	if (!pdata) {
+		pr_err("%s failed to kzalloc for tas5805 pdata\n", __func__);
+		return -ENOMEM;
+	}
+	tas5805m->pdata = pdata;
+
+	tas5805m_parse_dt(tas5805m, i2c->dev.of_node);
+	tas5805m->regmap = regmap;
+	tas5805m->vol = 100;	//100, -10dB
+
+	dev_set_drvdata(&i2c->dev, tas5805m);
+
+	ret = snd_soc_register_codec(&i2c->dev, &soc_codec_tas5805m,
+			&tas5805m_dai, 1);
+	if (ret != 0) {
+		pr_err("tms> tas5805m_i2c_probe REGISTER FAILED !!!!!!!!!!!!!!\n");
+		return -ENOMEM;
+	}
+
+	pr_err("tms> tas5805m_i2c_probe REGISTER OK\n");
+
+	reset_tas5805m_GPIO(&i2c->dev);
+
+//tms
+
+	return ret;
+}
+
+static int tas5805m_i2c_remove(struct i2c_client *i2c)
+{
+	devm_kfree(&i2c->dev, i2c_get_clientdata(i2c));
+
+	return 0;
+}
+
+static const struct i2c_device_id tas5805m_i2c_id[] = {
+	{"tas5805",},
+	{}
+};
+
+MODULE_DEVICE_TABLE(i2c, tas5805m_i2c_id);
+
+#ifdef CONFIG_OF
+static const struct of_device_id tas5805m_of_match[] = {
+	{.compatible = "ti,tas5805",},
+	{}
+};
+
+MODULE_DEVICE_TABLE(of, tas5805m_of_match);
+#endif
+
+static struct i2c_driver tas5805m_i2c_driver = {
+	.probe = tas5805m_i2c_probe,
+	.remove = tas5805m_i2c_remove,
+	.id_table = tas5805m_i2c_id,
+	.driver = {
+		   .name = TAS5805M_DRV_NAME,
+		   .of_match_table = tas5805m_of_match,
+		   },
+};
+
+module_i2c_driver(tas5805m_i2c_driver);
+
+MODULE_AUTHOR("Andy Liu <andy-liu@ti.com>");
+MODULE_DESCRIPTION("TAS5805M Audio Amplifier Driver");
+MODULE_LICENSE("GPL v2");
-- 
2.7.4

