From c0b5784cee022e06c495a5e9928824ac85958429 Mon Sep 17 00:00:00 2001
From: lingjie li <lingjie.li@amlogic.com>
Date: Wed, 11 Mar 2020 14:12:18 +0800
Subject: [PATCH 4/4] drm_meson: Add color_space/color_depth property. [1/1]

PD#SWPL-21851

Problem:
Add interface of colorspace path to hdmi driver

Solution:
Add color_space /color_depth property on drm driver.

Verify:
u212

Change-Id: I2c56c39803fbf4e2b39db42afece95e9013163ea
Signed-off-by: lingjie li <lingjie.li@amlogic.com>
---
 drivers/amlogic/drm/meson_hdmi.c | 49 +++++++++++++++++++++++++++++++-
 drivers/amlogic/drm/meson_hdmi.h |  8 +++++-
 2 files changed, 55 insertions(+), 2 deletions(-)

diff --git a/drivers/amlogic/drm/meson_hdmi.c b/drivers/amlogic/drm/meson_hdmi.c
index 7cbe8c165c5d..1983c798cca2 100644
--- a/drivers/amlogic/drm/meson_hdmi.c
+++ b/drivers/amlogic/drm/meson_hdmi.c
@@ -221,10 +221,24 @@ static int am_hdmi_connector_atomic_get_property
 	const struct drm_connector_state *state,
 	struct drm_property *property, uint64_t *val)
 {
+	struct am_hdmi_tx *am_hdmi = to_am_hdmi(connector);
 	if (property == connector->content_protection_property) {
 		DRM_INFO("get content_protection val: %d\n",
 			state->content_protection);
 		*val = state->content_protection;
+		return 0;
+	}
+
+	if (property == am_hdmi->color_depth_property) {
+		*val = am_hdmi->color_depth;
+		DRM_DEBUG_KMS("Get Color Depth val: %llu\n", *val);
+		return 0;
+	}
+
+	if (property == am_hdmi->color_space_property) {
+		*val = am_hdmi->color_space;
+		DRM_DEBUG_KMS("Get Color Space val: %llu\n", *val);
+		return 0;
 	} else {
 		DRM_DEBUG_ATOMIC("Unknown property %s\n", property->name);
 		return -EINVAL;
@@ -249,7 +263,8 @@ static const struct drm_connector_funcs am_hdmi_connector_funcs = {
 	.dpms			= drm_atomic_helper_connector_dpms,
 	.detect			= am_hdmi_connector_detect,
 	.fill_modes		= drm_helper_probe_single_connector_modes,
-	.set_property		= am_hdmi_connector_set_property,
+	.set_property   = drm_atomic_helper_connector_set_property,
+	.atomic_set_property	= am_hdmi_connector_atomic_set_property,
 	.atomic_get_property	= am_hdmi_connector_atomic_get_property,
 	.destroy		= am_hdmi_connector_destroy,
 	.reset			= drm_atomic_helper_connector_reset,
@@ -582,6 +597,37 @@ struct drm_connector *am_meson_hdmi_connector(void)
 	return &am_hdmi_info.connector;
 }
 
+static void am_meson_hdmi_connector_init_property(struct drm_device *drm_dev,
+		struct am_hdmi_tx *am_hdmi)
+{
+	struct drm_property *prop;
+	/* Connector */
+	am_hdmi->color_depth = MESON_DEFAULT_COLOR_DEPTH;
+	prop = drm_property_create_enum(drm_dev, 0, "Color Depth",
+			am_color_depth_enum_names,
+			ARRAY_SIZE(am_color_depth_enum_names));
+	if (prop) {
+		am_hdmi->color_depth_property = prop;
+		drm_object_attach_property(&am_hdmi->connector.base, prop,
+				am_hdmi->color_depth);
+	} else {
+		DRM_ERROR("Failed to add Color Depth property\n");
+	}
+
+	am_hdmi->color_space = MESON_DEFAULT_COLOR_SPACE;
+	prop = drm_property_create_enum(drm_dev, 0, "Color Space",
+			am_color_space_enum_names,
+			ARRAY_SIZE(am_color_space_enum_names));
+	if (prop) {
+		am_hdmi->color_space_property = prop;
+		drm_object_attach_property(&am_hdmi->connector.base, prop,
+				am_hdmi->color_space);
+	} else {
+		DRM_ERROR("Failed to add Color Space property\n");
+	}
+
+}
+
 static int am_meson_hdmi_bind(struct device *dev,
 	struct device *master, void *data)
 {
@@ -614,6 +660,7 @@ static int am_meson_hdmi_bind(struct device *dev,
 		dev_err(priv->dev, "Failed to init hdmi tx connector\n");
 		return ret;
 	}
+	am_meson_hdmi_connector_init_property(drm, am_hdmi);
 
 	connector->interlace_allowed = 1;
 
diff --git a/drivers/amlogic/drm/meson_hdmi.h b/drivers/amlogic/drm/meson_hdmi.h
index d4bea3747e27..27a91d75b1fa 100644
--- a/drivers/amlogic/drm/meson_hdmi.h
+++ b/drivers/amlogic/drm/meson_hdmi.h
@@ -22,6 +22,9 @@
 #define DDC_SEGMENT_ADDR   0x30
 #define VIC_MAX_NUM        512
 #define DRM_HDMITX_VER     "20180705"
+//Not sure the default value
+#define MESON_DEFAULT_COLOR_DEPTH COLORDEPTH_24B
+#define MESON_DEFAULT_COLOR_SPACE HDMI_COLORSPACE_RGB
 
 struct am_hdmi_data {
 	unsigned int vic;
@@ -58,7 +61,10 @@ struct am_hdmi_tx {
 	int irq;
 	unsigned int input_color_format;
 	unsigned int output_color_format;
-	unsigned int color_depth;
+	enum hdmi_color_depth color_depth;
+	enum hdmi_colorspace color_space;
+	struct drm_property *color_depth_property;
+	struct drm_property *color_space_property;
 	struct drm_display_mode previous_mode;
 	struct am_hdmi_data hdmi_info;
 	struct am_hdmi_i2c *i2c;
-- 
2.24.1

