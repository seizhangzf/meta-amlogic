From 6431d185c1e177cdce4996837f2cd92a24e18771 Mon Sep 17 00:00:00 2001
From: "jing.zhang" <jing.zhang@amlogic.com>
Date: Fri, 27 Aug 2021 11:09:05 +0800
Subject: [PATCH] audio: add demux stop  [1/1]

PD#SWPL-58167

Problem:
add demux stop

Solution:
sync android code

Verify:
yocto-ap212

Change-Id: I20a746085b6d4142a26a5c9489451137b13207c5
Signed-off-by: jing.zhang <jing.zhang@amlogic.com>
---
 dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.cpp     | 14 +++++++-------
 dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.h       |  1 +
 .../dmxwrap/MultiHwDemux/AmHwMultiDemuxWrapper.cpp |  3 ++-
 3 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.cpp b/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.cpp
index 12e04f0..66147cd 100644
--- a/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.cpp
+++ b/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.cpp
@@ -116,7 +116,7 @@ void* AM_DMX_Device::dmx_data_thread(void *arg)
                         if (ret == AM_SUCCESS) {
                             read_len += sec_len;
                         }
-                    } while (dev->enable_thread && read_len < sizeof(struct dmx_non_sec_es_header));
+                    } while (dev->enable_thread && !filter->to_be_stopped && read_len < sizeof(struct dmx_non_sec_es_header));
 
                     /* 2 read data */
                     header_es = (struct dmx_non_sec_es_header *)sec_buf;
@@ -135,7 +135,7 @@ void* AM_DMX_Device::dmx_data_thread(void *arg)
                             ALOGI("ret %d dvb_read audio len  %d frame len %d",ret, read_len ,header_es->len);
                             usleep (20000);
                         }
-                      } while (dev->enable_thread && read_len < header_es->len);
+                      } while (dev->enable_thread && !filter->to_be_stopped && read_len < header_es->len);
                       ALOGI("error header_es->len  %d\n ", header_es->len);
                       header_es->len=(BUF_SIZE-sizeof(struct dmx_non_sec_es_header));
                     }
@@ -157,7 +157,7 @@ void* AM_DMX_Device::dmx_data_thread(void *arg)
                             ALOGI("ret %d dvb_read audio len  %d frame len %d",ret, read_len ,header_es->len);
                             usleep (20000);
                         }
-                      } while (dev->enable_thread && read_len < header_es->len);
+                      } while (dev->enable_thread && !filter->to_be_stopped && read_len < header_es->len);
                     }
                     sec_len = sizeof(struct dmx_non_sec_es_header) + header_es->len;
 
@@ -620,6 +620,7 @@ AM_ErrorCode_t AM_DMX_Device::AM_DMX_StartFilter(int fhandle)
         if (ret == AM_SUCCESS)
         {
             filter->enable = true;
+            filter->to_be_stopped = false;
         }
     }
 
@@ -643,21 +644,20 @@ AM_ErrorCode_t AM_DMX_Device::AM_DMX_StopFilter(int fhandle)
 
     //AM_TRY(dmx_get_openned_dev(dev_no, &dev));
 
-    pthread_mutex_lock(&lock);
-
     ret = dmx_get_used_filter(fhandle, &filter);
 
     if (ret == AM_SUCCESS)
     {
+        filter->to_be_stopped = true;
         if (filter->enable)
         {
+            pthread_mutex_lock(&lock);
             dmx_wait_cb();
             ret = dmx_stop_filter(filter);
+            pthread_mutex_unlock(&lock);
         }
     }
 
-    pthread_mutex_unlock(&lock);
-
     return ret;
 }
 
diff --git a/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.h b/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.h
index d38c856..0358226 100644
--- a/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.h
+++ b/dtv_audio_utils/dmxwrap/MultiHwDemux/AmDmx.h
@@ -78,6 +78,7 @@ struct AM_DMX_Filter {
 	int 	   id;		 /**< Filter ID*/
 	AM_DMX_DataCb		cb; 	   /**< 解复用数据回调函数*/
 	void			   *user_data; /**< 数据回调函数用户参数*/
+    bool to_be_stopped;
 };
 class AmLinuxDvd;
 
diff --git a/dtv_audio_utils/dmxwrap/MultiHwDemux/AmHwMultiDemuxWrapper.cpp b/dtv_audio_utils/dmxwrap/MultiHwDemux/AmHwMultiDemuxWrapper.cpp
index e65a0da..be0d871 100644
--- a/dtv_audio_utils/dmxwrap/MultiHwDemux/AmHwMultiDemuxWrapper.cpp
+++ b/dtv_audio_utils/dmxwrap/MultiHwDemux/AmHwMultiDemuxWrapper.cpp
@@ -160,12 +160,12 @@ AM_DmxErrorCode_t AmHwMultiDemuxWrapper::AmDemuxWrapperResume(void) {
     return AM_Dmx_SUCCESS;
 }
 
+static int fid_audio = 0;
 AM_DmxErrorCode_t AmHwMultiDemuxWrapper::AmDemuxWrapperSetAudioParam(int aid, AM_AV_AFormat_t afmt ,int security_mem_level) {
 
     struct dmx_pes_filter_params aparam;
     int aud_format;
     memset(&aparam, 0, sizeof(aparam));
-    int fid_audio = 0;
     mDemuxPara.aud_id = aid;
     mDemuxPara.aud_fmt = afmt;
     switch (afmt) {
@@ -273,6 +273,7 @@ AM_DmxErrorCode_t AmHwMultiDemuxWrapper::AmDemuxWrapperGetStates (int * value ,
 }
 
 AM_DmxErrorCode_t AmHwMultiDemuxWrapper::AmDemuxWrapperStop(void) {
+    AmDmxDevice->AM_DMX_StopFilter(fid_audio);
     return AM_Dmx_SUCCESS;
 }
 
-- 
2.25.1

